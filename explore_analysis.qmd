---
title: "Exploratory Data Analysis"
---

```{r setup, include=FALSE}
library(tidyverse)
library(ggplot2)
library(forecast)
library(astsa) 
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(gridExtra)          
library(zoo)
library(readxl)
library(seasonal)
```

# 1. Original Data

::: panel-tabset
## Financial/Economy: Large-scale Pharmaceutical

```{r large_pharma}
#| code-fold: true
#| warning: false

options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)

tickers = c("PFE", "VRTX", "TEVA", "SAGE")

for (i in tickers){
  getSymbols(i,
             from = "2019-01-01",
             to = "2024-02-02")}

x <- list(
  title = "date"
)
y <- list(
  title = "value"
)

stock <- data.frame(PFE$PFE.Adjusted,
                    VRTX$VRTX.Adjusted,
                    TEVA$TEVA.Adjusted,
                    SAGE$SAGE.Adjusted)


stock <- data.frame(stock,rownames(stock))
colnames(stock) <- append(tickers,'Dates')

stock <- stock %>%
  rownames_to_column(var = "date")

stock$date<-as.Date(stock$Dates,"%Y-%m-%d")


pharma_ts <- ts(stock$PFE, start = c(year(min(stock$date)), month(min(stock$date))), end = c(year(max(stock$date)), month(max(stock$date))), frequency = 12)

pharma_plot<-autoplot(pharma_ts, xlab = "Time", ylab = "Price", colour = "#27aeef")+ggtitle('Time Series Plot For Pfizer Stock')+theme_bw()
ggplotly(pharma_plot)
```

## Financial/Economy: Biotechnology

```{r biotech}
#| code-fold: true
#| warning: false

biotech_ts <- ts(stock$VRTX, start = c(year(min(stock$date)), month(min(stock$date))), end = c(year(max(stock$date)), month(max(stock$date))), frequency = 12)

biotech_plot<-autoplot(biotech_ts, xlab = "Time", ylab = "Price", colour = "#27aeef")+ggtitle('Time Series Plot For Vertex Stock')+theme_bw()
ggplotly(biotech_plot)
```

## Financial/Economy: Generic and Specialty Drug

```{r drug}
#| code-fold: true
#| warning: false

drug_ts <- ts(stock$TEVA, start = c(year(min(stock$date)), month(min(stock$date))), end = c(year(max(stock$date)), month(max(stock$date))), frequency = 12)

drug_plot<-autoplot(drug_ts, xlab = "Time", ylab = "Price", colour = "#27aeef")+ggtitle('Time Series Plot For TEVA Stock')+theme_bw()
ggplotly(drug_plot)
```

## Financial/Economy: Small and Medium-sized Biotech

```{r smallbiotech}
#| code-fold: true
#| warning: false

small_biotech_ts <- ts(stock$SAGE, start = c(year(min(stock$date)), month(min(stock$date))), end = c(year(max(stock$date)), month(max(stock$date))), frequency = 12)

small_biotech_plot<-autoplot(small_biotech_ts, xlab = "Time", ylab = "Price", colour = "#27aeef")+ggtitle('Time Series Plot For SAGE Stock')+theme_bw()
ggplotly(small_biotech_plot)
```

## Public Health Outcomes: Average Life Expectancy

```{r life_exp}
#| code-fold: true
#| warning: false

# Importing the dataset
average_life_expectancy <- read_xlsx("data/life_expectancy_7countries_2000_2022.xlsx")

# Change it to long format
average_life_expectancy <- average_life_expectancy %>% 
  pivot_longer(cols = -Year, 
               names_to = "Country", 
               values_to = "Life_Expectancy")

average_life_expectancy$Year <- as.Date(paste(average_life_expectancy$Year, "01", "01", sep = "-"), format = "%Y-%m-%d")
average_life_expectancy$Life_Expectancy <- as.double(average_life_expectancy$Life_Expectancy)

# Filter to only include the US
average_life_expectancy <- average_life_expectancy %>% 
  filter(Country == "United States")

ale_ts <- ts(average_life_expectancy$Life_Expectancy, start = c(year(min(average_life_expectancy$Year)), month(min(average_life_expectancy$Year))), end = c(year(max(average_life_expectancy$Year)), month(max(average_life_expectancy$Year))), frequency = 12)

ale_ts_plot<-autoplot(ale_ts, 
                      xlab = "Time", 
                      ylab = "Average Life Expectancy(years)", 
                      colour = "#27aeef")+
  ggtitle('Time Series Plot For Average Life Expectancy in the US')+
  theme_bw()

ggplotly(ale_ts_plot)
```

## Public Health Outcomes: Deaths of Major Diseases(Cancer, Heart Disease, Diabetes)

```{r death_major_diseases}
#| code-fold: true
#| warning: false

# Importing the dataset
death_cancer <- read_xlsx("data/deaths_cancer_us_1950_2019.xlsx")
death_heart <- read_xlsx("data/deaths_heart_diseases_us_1950_2019.xlsx")
death_diabetes <- read_xlsx("data/deaths_diabetes_us_1950_2019.xlsx")

# Merge these three datasets
death_major_diseases <- merge(death_cancer, death_heart, by = "Year")
death_major_diseases <- merge(death_major_diseases, death_diabetes, by = "Year")

# Change Date format
death_major_diseases$Year <- as.Date(paste(death_major_diseases$Year, "01", "01", sep = "-"), format = "%Y-%m-%d")
death_major_diseases$Death_Cancer <- as.double(death_major_diseases$Death_Cancer)
death_major_diseases$Death_Heart_Disease <- as.double(death_major_diseases$Death_Heart_Disease)
death_major_diseases$Death_Diabetes <- as.double(death_major_diseases$Death_Diabetes)

# Create time series
cancer_ts <- ts(death_major_diseases$Death_Cancer, start = c(year(min(death_major_diseases$Year)), month(min(death_major_diseases$Year))), end = c(year(max(death_major_diseases$Year)), month(max(death_major_diseases$Year))), frequency = 12)
heart_ts <- ts(death_major_diseases$Death_Heart_Disease, start = c(year(min(death_major_diseases$Year)), month(min(death_major_diseases$Year))), end = c(year(max(death_major_diseases$Year)), month(max(death_major_diseases$Year))), frequency = 12)
diabetes_ts <- ts(death_major_diseases$Death_Diabetes, start = c(year(min(death_major_diseases$Year)), month(min(death_major_diseases$Year))), end = c(year(max(death_major_diseases$Year)), month(max(death_major_diseases$Year))), frequency = 12)

# Show the plots
cancer_plot<-autoplot(cancer_ts, xlab = "Time", ylab = "Deaths", colour = "#27aeef")+ggtitle('Time Series Plot For Deaths Caused by Cancer')+theme_bw()
heart_plot<-autoplot(heart_ts, xlab = "Time", ylab = "Deaths", colour = "#27aeef")+ggtitle('Time Series Plot For Deaths Caused by Heart Disease')+theme_bw()
diabetes_plot<-autoplot(diabetes_ts, xlab = "Time", ylab = "Deaths", colour = "#27aeef")+ggtitle('Time Series Plot For Deaths Caused by Diabetes')+theme_bw()

ggplotly(cancer_plot)
ggplotly(heart_plot)
ggplotly(diabetes_plot)
```

## Public Health Outcomes: Infant Mortality Rate

```{r infant_mortality}
#| code-fold: true
#| warning: false

# Importing the dataset
infant_mortality <- read_xlsx("data/infant_mortality_rate_us_1990_2021.xlsx")

# Change Date format
infant_mortality$Year <- as.Date(paste(infant_mortality$Year, "01", "01", sep = "-"), format = "%Y-%m-%d")
infant_mortality$Infant_Mortality_Rates <- as.double(infant_mortality$Infant_Mortality_Rates)

# Create time series
infant_mortality_ts <- ts(infant_mortality$Infant_Mortality_Rates, start = c(year(min(infant_mortality$Year)), month(min(infant_mortality$Year))), end = c(year(max(infant_mortality$Year)), month(max(infant_mortality$Year))), frequency = 12)

# Show the plot
infant_mortality_plot<-autoplot(infant_mortality_ts, xlab = "Time", ylab = "Infant Mortality Rate", colour = "#27aeef")+ggtitle('Time Series Plot For Infant Mortality Rate')+theme_bw()

ggplotly(infant_mortality_plot)

```

## Healthcare Access and Utilization: Health Insurance Coverage

```{r health_insurance}
#| code-fold: true
#| warning: false

# Importing the dataset
health_insurance <- read_xlsx("data/share_of_people_us_without_health_insurance_age_1997_2022.xlsx")

# Change Date format
health_insurance$Year <- as.Date(paste(health_insurance$Year, "01", "01", sep = "-"), format = "%Y-%m-%d")

# Change it to long format
health_insurance <- health_insurance %>% 
  pivot_longer(cols = -Year, 
               names_to = "Age_Group", 
               values_to = "Percentage")

# Create time series
health_insurance_ts <- ts(health_insurance$Percentage, start = c(year(min(health_insurance$Year)), month(min(health_insurance$Year))), end = c(year(max(health_insurance$Year)), month(max(health_insurance$Year))), frequency = 12)

# Show the plot
health_insurance_plot<-autoplot(health_insurance_ts, xlab = "Time", ylab = "Percentage", colour = "#27aeef")+ggtitle('Time Series Plot For Share of People Without Health Insurance')+theme_bw()

ggplotly(health_insurance_plot)
```

## Healthcare Access and Utilization: Emergency Room Visits

```{r emergency_room_visits}
#| code-fold: true
#| warning: false

# Importing the dataset
emergency_room <- read_xlsx("data/us_emergency_room_visits_1997_2019_by_age.xlsx")

# Change it to long format
emergency_room <- emergency_room %>% 
  pivot_longer(cols = -Year, 
               names_to = "Age_Group", 
               values_to = "Visits_Percent")

# Change Date format
emergency_room$Year <- as.Date(paste(emergency_room$Year, "01", "01", sep = "-"), format = "%Y-%m-%d")

# Create time series
emergency_room_ts <- ts(emergency_room$Visits_Percent, start = c(year(min(emergency_room$Year)), month(min(emergency_room$Year))), end = c(year(max(emergency_room$Year)), month(max(emergency_room$Year))), frequency = 12)

# Show the plot
emergency_room_plot<-autoplot(emergency_room_ts, xlab = "Time", ylab = "Percentage", colour = "#27aeef")+ggtitle('Time Series Plot For Emergency Room Visits')+theme_bw()

ggplotly(emergency_room_plot)

```

## Healthcare Costs: Costs of Prescription Drugs

```{r prescription_drugs}
#| code-fold: true
#| warning: false

# Importing the dataset
prescription_drug <- read_xlsx("data/prescription_drug_expenditure_us_1960_2022.xlsx")

# Change Date format
prescription_drug$Year <- as.Date(paste(prescription_drug$Year, "01", "01", sep = "-"), format = "%Y-%m-%d")

# Create time series
prescription_drug_ts <- ts(prescription_drug$Expenditure, start = c(year(min(prescription_drug$Year)), month(min(prescription_drug$Year))), end = c(year(max(prescription_drug$Year)), month(max(prescription_drug$Year))), frequency = 12)

# Show the plot
prescription_drug_plot<-autoplot(prescription_drug_ts, xlab = "Time", ylab = "Expenditure", colour = "#27aeef")+ggtitle('Time Series Plot For Prescription Drug Expenditure')+theme_bw()

ggplotly(prescription_drug_plot)

```

## Healthcare Costs: GDP Contribution of Healthcare Industry

```{r gdp_healthcare}
#| code-fold: true
#| warning: false

# Importing the dataset
gdp_industry <- read_csv("data/GDP_by_Industry.csv", skip = 4) %>%
  select(-Line)

colnames(gdp_industry) <- c("Industry", "2018-Q1", "2018-Q2", "2018-Q3", "2018-Q4", "2019-Q1", "2019-Q2", "2019-Q3", "2019-Q4", "2020-Q1", "2020-Q2", "2020-Q3", "2020-Q4", "2021-Q1", "2021-Q2", "2021-Q3", "2021-Q4", "2022-Q1", "2022-Q2", "2022-Q3", "2022-Q4", "2023-Q1", "2023-Q2", "2023-Q3")

gdp_healthcare <- gdp_industry %>%
  filter(
           (Industry == "Health care and social assistance")
  )

## Change it to long format
gdp_healthcare <- gdp_healthcare %>%
  pivot_longer(cols = -Industry, 
               names_to = "Date", 
               values_to = "GDP")

# Change date to Date format
gdp_healthcare$Date <- as.yearqtr(gdp_healthcare$Date, format = "%Y-Q%q")

gdp_healthcare$Date <- as.Date(gdp_healthcare$Date)
gdp_healthcare$GDP <- as.double(gdp_healthcare$GDP)

gdp_healthcare <- gdp_healthcare %>%
  mutate(
    year = year(Date)
  )

# Create time series
gdp_healthcare_ts <- ts(gdp_healthcare$GDP, start = c(year(min(gdp_healthcare$Date))), end = c(year(max(gdp_healthcare$Date))), frequency = 12)

# Show the plot
gdp_healthcare_plot<-autoplot(gdp_healthcare_ts, xlab = "Time", ylab = "GDP", colour = "#27aeef")+ggtitle('Time Series Plot For GDP Contribution of Healthcare Industry')+theme_bw()

ggplotly(gdp_healthcare_plot)


```

## Health Behavior and Risk Factors: Smoking Prevalence

```{r smoking_prevalence}
#| code-fold: true
#| warning: false

# Importing the dataset
adult_smokers <- read_xlsx("data/number_of_adult_smokers_us_1965_2021.xlsx")

# Change Date format
adult_smokers$Year <- as.Date(paste(adult_smokers$Year, "01", "01", sep = "-"), format = "%Y-%m-%d")

# Create time series
adult_smokers_ts <- ts(adult_smokers$Number, start = c(year(min(adult_smokers$Year)), month(min(adult_smokers$Year))), end = c(year(max(adult_smokers$Year)), month(max(adult_smokers$Year))), frequency = 12)

# Show the plot
adult_smokers_plot<-autoplot(adult_smokers_ts, 
                             xlab = "Time", 
                             ylab = "Number of Smokers", 
                             colour = "#27aeef")+
  ggtitle('Time Series Plot For Number of Adult Smokers')+
  theme_bw()

ggplotly(adult_smokers_plot)
```

## Health Behavior and Risk Factors: Alcohol Consumption

```{r obesity_prevalence}
#| code-fold: true
#| warning: false

# Importing the dataset
alcohol_consumption <- read_xlsx("data/per_capita_alcohol_consumption_of_all_beverages_us_1850_2021.xlsx")

# Change Date format
alcohol_consumption$Year <- as.Date(paste(alcohol_consumption$Year, "01", "01", sep = "-"), format = "%Y-%m-%d")

# Create time series
alcohol_consumption_ts <- ts(alcohol_consumption$Consumption, start = c(year(min(alcohol_consumption$Year)), month(min(alcohol_consumption$Year))), end = c(year(max(alcohol_consumption$Year)), month(max(alcohol_consumption$Year))), frequency = 12)

# Show the plot

alcohol_consumption_plot<-autoplot(alcohol_consumption_ts, 
                                   xlab = "Time", 
                                   ylab = "Gallons", 
                                   colour = "#27aeef")+
  ggtitle('Time Series Plot For Per Capita Alcohol Consumption')+
  theme_bw()

ggplotly(alcohol_consumption_plot)
```
:::

The equation for additive time series: $$Series=Trend+Seasonal+Random$$

The equation for multiplicative time series: $$Series=Trend∗Seasonal∗Random$$

**Financial/Economy: Large-scale Pharmaceutical:** We use `Pfizer stock` to represent Large-scale Pharmaceutical stocks. The trend in this series is characterized by fluctuations. There was a significant drop at the beginning of 2020, attributable to the impact of COVID-19. However, it rebounded with the introduction of vaccines. Regarding seasonality, there is no evident pattern, leading to the conclusion that the series does not display any seasonal variations. Additionally, the data behaves in a multiplicative manner.

**Financial/Economy: Biotechnology:** We use `Vertex stock` to represent Biotechnology stocks. The trend in this series shows an overall increase, but with noticeable fluctuations between 2020 and 2024. As for seasonality, the absence of a clear pattern leads us to conclude that the series does not exhibit seasonal variations. Furthermore, the series exhibits a multiplicative behavior.

**Financial/Economy: Generic and Specialty Drug:** We use `TEVA stock` to represent Generic and Specialty Drug stocks. The trend in this series initially showed an increasing pattern with fluctuations until the end of 2020, and it remained unaffected by Covid-19. Subsequently, there was a decrease marked by fluctuations. There is no apparent seasonality in the series, leading to the conclusion that it lacks seasonal patterns. Additionally, the behavior of the series is multiplicative.

**Financial/Economy: Small and Medium-sized Biotech:** We use `SAGE stock` to represent Small and Medium-sized Biotech stocks. The overall trend in the stock price generally shows an increase, albeit with some fluctuations. Throughout 2020, the prices mostly rose, unaffected by Covid-19. Regarding seasonality, there is no evident seasonality influencing the stock prices. The series also displays a multiplicative nature.

**Public Health Outcomes: Average Life Expectancy:** This series demonstrates a recurring pattern of one year of increases with minor fluctuations, followed by nine months of declines, and then a resurgence for about a year. The distinct up and down movement indicates clear seasonality within the data. Furthermore, the series is characterized by an additive nature.

**Public Health Outcomes: Deaths of Major Diseases(Cancer, Heart Disease, Diabetes)** Each of these diseases shows repeated cycles of peaks and troughs, suggesting seasonal influences on mortality rates, possibly driven by environmental factors, health system performance variability, or seasonal health patterns. While these plots focus on seasonal variations and do not highlight a long-term trend, it does not imply the absence of such a trend. The series is additive.

**Public Health Outcomes: Infant Mortality Rate** There is a clear seasonal pattern, with sharp declines followed by immediate increases, suggesting a possible reporting or data recording cycle rather than actual fluctuations in infant mortality rates. The sharpness and regularity of the fluctuations suggest that the data might be reported or recorded at specific times of the year, leading to the sharp increases and drops. The series is additive.

**Healthcare Access and Utilization: Health Insurance Coverage** The data shows significant fluctuations indicative of a seasonal pattern. The series is characterized by a multiplicative nature.

**Healthcare Access and Utilization: Emergency Room Visits** A clear seasonal pattern is observed with sharp increases followed by immediate decreases. The series is multiplicative.

**Healthcare Costs: Costs of Prescription Drugs** The plot shows regular fluctuations that suggest an annual cycle in expenditure, which could be influenced by various factors such as policy changes, market dynamics, or seasonal patterns in drug purchases and usage. The pattern of expenditure appears to be cyclical with sharp increases followed by decreases, indicative of a seasonal trend. This regularity suggests that there are underlying factors that consistently affect prescription drug spending at certain times of the year. A long-term trend is not immediately clear from this visual alone. The series is additive.

**Healthcate Costs: GDP Contribution of Healthcare Industry** The series follows a consistent cycle every one year and nine months, marked by an increase-flat-decrease-sharp peak-decrease pattern, repeating with the same rhythm. The lack of a 12-month cycle suggests an absence of typical seasonality. The series is multiplicative.

**Health Behavior and Risk Factors: Smoking Prevelance** The trend in this series is marked by a sharp increase with minor fluctuations, followed by a sharp decrease and a subsequent resurgence. The variability in the duration of these periods precludes a definitive conclusion about seasonality. The series is additive.

**Health Behavior and Risk Factors: Alcohol Consumpition** The data shows a repeating pattern of an increase in alcohol consumption, followed by a sharp drop, then an immediate increase, and another rapid decrease. This pattern supports the presence of seasonality in the series. The series is additive.

# 2. Lag Plots

::: panel-tabset
## Financial/Economy: Large-scale Pharmaceutical

```{r large_pharma_lag}
#| code-fold: true
#| warning: false

gglagplot(pharma_ts, do.lines=FALSE) +
  xlab("Lags")+
  ylab("Price ($) ")+
  ggtitle("Lag Plot for Pzifer Stock")+
  theme(axis.text.x=element_text(angle=45, hjust=1)) + 
  theme_bw()

```

## Financial/Economy: Biotechnology

```{r biotech_lag}
#| code-fold: true
#| warning: false

gglagplot(biotech_ts, do.lines=FALSE) +
  xlab("Lags")+
  ylab("Price ($) ")+
  ggtitle("Lag Plot for Vertex Stock")+
  theme(axis.text.x=element_text(angle=45, hjust=1)) + 
  theme_bw()

```

## Financial/Economy: Generic and Specialty Drug

```{r drug_lag}
#| code-fold: true
#| warning: false

gglagplot(drug_ts, do.lines=FALSE) +
  xlab("Lags")+
  ylab("Price ($) ")+
  ggtitle("Lag Plot for TEVA Stock")+
  theme(axis.text.x=element_text(angle=45, hjust=1)) + 
  theme_bw()

```

## Financial/Economy: Small and Medium-sized Biotech

```{r smallbiotech_lag}
#| code-fold: true
#| warning: false

gglagplot(small_biotech_ts, do.lines=FALSE) +
  xlab("Lags")+
  ylab("Price ($) ")+
  ggtitle("Lag Plot for SAGE Stock")+
  theme(axis.text.x=element_text(angle=45, hjust=1)) + 
  theme_bw()
```

## Public Health Outcomes: Average Life Expectancy

```{r life_expectancy_lag}
#| code-fold: true
#| warning: false

gglagplot(ale_ts, do.lines=FALSE) +
  xlab("Lags")+
  ylab("Years")+
  ggtitle("Lag Plot for Life Expectancy")+
  theme(axis.text.x=element_text(angle=45, hjust=1)) + 
  theme_bw()

```

## Public Health Outcomes: Deaths of Major Diseases(Cancer, Heart Disease, Diabetes)

```{r death_diseases_lag}
#| code-fold: true
#| warning: false

# Lage Plot of Cancer
gglagplot(cancer_ts, do.lines=FALSE) +
  xlab("Lags")+
  ylab("Deaths")+
  ggtitle("Lag Plot for Deaths of Cancer")+
  theme(axis.text.x=element_text(angle=45, hjust=1)) + 
  theme_bw()

# Lage Plot of Heart Disease
gglagplot(heart_ts, do.lines=FALSE) +
  xlab("Lags")+
  ylab("Deaths")+
  ggtitle("Lag Plot for Deaths of Heart Disease")+
  theme(axis.text.x=element_text(angle=45, hjust=1)) + 
  theme_bw()

# Lage Plot of Diabetes
gglagplot(diabetes_ts, do.lines=FALSE) +
  xlab("Lags")+
  ylab("Deaths")+
  ggtitle("Lag Plot for Deaths of Diabetes")+
  theme(axis.text.x=element_text(angle=45, hjust=1)) + 
  theme_bw()

```

## Public Health Outcomes: Infant Mortality Rate

```{r infant_mortality_lag}
#| code-fold: true
#| warning: false

gglagplot(infant_mortality_ts, do.lines=FALSE) +
  xlab("Lags")+
  ylab("Deaths")+
  ggtitle("Lag Plot for Infant Mortality Rate")+
  theme(axis.text.x=element_text(angle=45, hjust=1)) + 
  theme_bw()


```

## Healthcare Access and Utilization: Health Insurance Coverage

```{r health_insurance_lag}
#| code-fold: true
#| warning: false

gglagplot(health_insurance_ts, do.lines=FALSE) +
  xlab("Lags")+
  ylab("Percentage")+
  ggtitle("Lag Plot for Health Insurance Coverage")+
  theme(axis.text.x=element_text(angle=45, hjust=1)) + 
  theme_bw()


```

## Healthcare Access and Utilization: Emergency Room Visits

```{r emergency_room_lag}
#| code-fold: true
#| warning: false

gglagplot(emergency_room_ts, do.lines=FALSE) +
  xlab("Lags")+
  ylab("Visits")+
  ggtitle("Lag Plot for Emergency Room Visits")+
  theme(axis.text.x=element_text(angle=45, hjust=1)) + 
  theme_bw()
```

## Healthcare Costs: Costs of Prescription Drugs

```{r prescription_drug_lag}
#| code-fold: true
#| warning: false

gglagplot(prescription_drug_ts, do.lines=FALSE) +
  xlab("Lags")+
  ylab("Costs")+
  ggtitle("Lag Plot for Costs of Prescription Drugs")+
  theme(axis.text.x=element_text(angle=45, hjust=1)) + 
  theme_bw()
```

## Healthcare Costs: GDP Contribution of Healthcare Industry

```{r gdp_healthcare_lag}
#| code-fold: true
#| warning: false

gglagplot(gdp_healthcare_ts, do.lines=FALSE) +
  xlab("Lags")+
  ylab("Percentage")+
  ggtitle("Lag Plot for GDP Contribution of Healthcare Industry")+
  theme(axis.text.x=element_text(angle=45, hjust=1)) + 
  theme_bw()

```

## Health Behavior and Risk Factors: Smoking Prevalence

```{r smoking_lag}
#| code-fold: true
#| warning: false

gglagplot(adult_smokers_ts, do.lines=FALSE) +
  xlab("Lags")+
  ylab("Percentage")+
  ggtitle("Lag Plot for Smoking Prevalence")+
  theme(axis.text.x=element_text(angle=45, hjust=1)) + 
  theme_bw()

```

## Health Behavior and Risk Factors: Alcohol Consumption

```{r alcohol_lag}
#| code-fold: true
#| warning: false

gglagplot(alcohol_consumption_ts, do.lines=FALSE) +
  xlab("Lags")+
  ylab("Percentage")+
  ggtitle("Lag Plot for Alcohol Consumption")+
  theme(axis.text.x=element_text(angle=45, hjust=1)) + 
  theme_bw()

```
:::

**Financial/Economy: Large-scale Pharmaceutical:** The data shows a strong positive autocorrelation in the initial two lags, which gradually weakens until reaching a very weak positive autocorrelation between lags 13 and 16.

**Financial/Economy: Biotechnology:** A similar pattern emerges with strong positive autocorrelation in the first two lags, which then diminishes progressively, ending in a very weak positive autocorrelation from lags 13 to 16.

**Financial/Economy: Generic and Specialty Drug:** Initially, there is strong positive autocorrelation in the first two lags, which progressively weakens, culminating in a very weak positive autocorrelation in lags 13-16.

**Financial/Economy: Small and Medium-sized Biotech:** It exhibits strong positive autocorrelation in the first two lags, which gradually decreases to a very weak positive autocorrelation by lags 13 to 16.

**Public Health Outcomes: Average Life Expectancy:** The series shows a strong positive autocorrelation in the first lag.

**Public Health Outcomes: Deaths of Major Diseases(Cancer, Heart Disease, Diabetes)** There is strong positive autocorrelation in the first four lags, which progressively weakens, reaching very weak positive autocorrelation in lags 13 to 16.

**Public Health Outcomes: Infant Mortality Rate** This data indicates strong positive autocorrelation in the first three lags, which then weakens progressively to a very weak positive autocorrelation by lags 13 to 16.

**Healthcare Access and Utilization: Health Insurance Coverage** There is notable strong positive autocorrelation in the first lag, which then diminishes to negligible or very weak positive autocorrelation.

**Healthcare Access and Utilization: Emergency Room Visits** Actually we can find no more autocorrelation or very weak positive autocorrelation.

**Healthcare Costs: Costs of Prescription Drugs** A strong positive autocorrelation is observed in the first lag, which weakens progressively, resulting in a very weak positive autocorrelation between lags 13 and 16.

**Healthcate Costs: GDP Contribution of Healthcare Industry** There is strong positive autocorrelation in the first three lags, which then lessens progressively to a very weak positive autocorrelation in lags 13 to 16.

**Health Behavior and Risk Factors: Smoking Prevelance** The series begins with strong positive autocorrelation in the first two lags, which progressively decreases to a very weak positive autocorrelation by lags 13 to 16.

**Health Behavior and Risk Factors: Alcohol Consumpition** There is strong positive autocorrelation in the first lag, after which there is no more autocorrelation or only very weak positive autocorrelation.

# 3. Decomposition

::: panel-tabset
## Financial/Economy: Large-scale Pharmaceutical

```{r large_pharma_decomposition}
#| code-fold: true
#| warning: false

decomposed_pharma <- decompose(pharma_ts, "multiplicative")
autoplot(decomposed_pharma, colour = "#27aeef", main = "Decomposition Plot For Pfizer Stock")+theme_bw()

```

## Financial/Economy: Biotechnology

```{r biotech_decomposition}
#| code-fold: true
#| warning: false

decomposed_biotech <- decompose(biotech_ts, "multiplicative")
autoplot(decomposed_biotech, colour = "#27aeef", main = "Decomposition Plot For Vertex Stock")+theme_bw()

```

## Financial/Economy: Generic and Specialty Drug

```{r drug_decomposition}
#| code-fold: true
#| warning: false

decomposed_drug <- decompose(drug_ts, "multiplicative")
autoplot(decomposed_drug, colour = "#27aeef", main = "Decomposition Plot For TEVA Stock")+theme_bw()

```

## Financial/Economy: Small and Medium-sized Biotech

```{r smallbiotech_decomposition}
#| code-fold: true
#| warning: false

decomposed_small_biotech <- decompose(small_biotech_ts, "multiplicative")
autoplot(decomposed_small_biotech, colour = "#27aeef", main = "Decomposition Plot For SAGE Stock")+theme_bw()

```

## Public Health Outcomes: Average Life Expectancy

```{r life_expectancy_decomposition}
#| code-fold: true
#| warning: false

decomposed_life_expectancy <- decompose(ale_ts, "additive")
autoplot(decomposed_life_expectancy, colour = "#27aeef", main = "Decomposition Plot For Life Expectancy")+theme_bw()

```

## Public Health Outcomes: Deaths of Major Diseases

```{r deaths_major_diseases_decomposition}
#| code-fold: true
#| warning: false

# Decomposition of Cancer
decomposed_cancer <- decompose(cancer_ts, "additive")
autoplot(decomposed_cancer, colour = "#27aeef", main = "Decomposition Plot For Deaths of Cancer")+theme_bw()

# Decomposition of Heart Disease
decomposed_heart <- decompose(heart_ts, "additive")
autoplot(decomposed_heart, colour = "#27aeef", main = "Decomposition Plot For Deaths of Heart Disease")+theme_bw()

# Decomposition of Diabetes
decomposed_diabetes <- decompose(diabetes_ts, "additive")
autoplot(decomposed_diabetes, colour = "#27aeef", main = "Decomposition Plot For Deaths of Diabetes")+theme_bw()

```

## Public Health Outcomes: Infant Mortality Rate

```{r infant_mortality_decomposition}
#| code-fold: true
#| warning: false

decomposed_infant_mortality <- decompose(infant_mortality_ts, "additive")
autoplot(decomposed_infant_mortality, colour = "#27aeef", main = "Decomposition Plot For Infant Mortality Rate")+theme_bw()

```

## Health Access and Utilization: Health Insurance Coverage

```{r health_insurance_decomposition}
#| code-fold: true
#| warning: false

decomposed_health_insurance <- decompose(health_insurance_ts, "multiplicative")
autoplot(decomposed_health_insurance, colour = "#27aeef", main = "Decomposition Plot For Health Insurance Coverage")+theme_bw()

```

## Health Access and Utilization: Emergency Room Visits

```{r er_visits_decomposition}
#| code-fold: true
#| warning: false

decomposed_er_visits <- decompose(emergency_room_ts, "multiplicative")
autoplot(decomposed_er_visits, colour = "#27aeef", main = "Decomposition Plot For Emergency Room Visits")+theme_bw()

```

## Healthcare Costs: Costs of Prescription Drugs

```{r prescription_drug_costs_decomposition}
#| code-fold: true
#| warning: false

decomposed_prescription_drug_costs <- decompose(prescription_drug_ts, "additive")
autoplot(decomposed_prescription_drug_costs, colour = "#27aeef", main = "Decomposition Plot For Prescription Drug Costs")+theme_bw()

```

## Healthcare Costs: GDP Contribution of Healthcare Industry

```{r gdp_healthcare_decomposition}
#| code-fold: true
#| warning: false

decomposed_gdp_healthcare <- decompose(gdp_healthcare_ts, "multiplicative")
autoplot(decomposed_gdp_healthcare, colour = "#27aeef", main = "Decomposition Plot For GDP Contributions of Healthcare Industry")+theme_bw()

```

## Health Behavior and Risk Factors: Smoking Prevalence

```{r smoking_prevalence_decomposition}
#| code-fold: true
#| warning: false

decomposed_smoking_prevalence <- decompose(adult_smokers_ts, "additive")
autoplot(decomposed_smoking_prevalence, colour = "#27aeef", main = "Decomposition Plot For Smoking Prevalence")+theme_bw()

```

## Health Behavior and Risk Factors: Alcohol Consumption

```{r alcohol_consumption_decomposition}
#| code-fold: true
#| warning: false

decomposed_alcohol_consumption <- decompose(alcohol_consumption_ts, "additive")
autoplot(decomposed_alcohol_consumption, colour = "#27aeef", main = "Decomposition Plot For Alcohol Consumption")+theme_bw()

```
:::

In our `Part 1 - Original Data`, we have already tried to examine the trend, seasonality, and noise in the time series data. In this section, we've decomposed our time series data into trend, seasonality, and noise components. The trend component represents the long-term progression of the time series data, the seasonal component represents the seasonal variation in the time series data, and the noise component represents the random variation in the time series data. To conclude, for all of the series we have, the decomposition plots can support our conclusions on trend, seasonality, and noise.

# 4. ACF and PACF Plots

::: panel-tabset
## Financial/Economy: Large-scale Pharmaceutical

```{r large_pharma_acf_pacf}
#| code-fold: true
#| warning: false

pharma_acf <- ggAcf(pharma_ts)+ggtitle("ACF Plot for Pzifer Stock ") + theme_bw() +
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef") 

pharma_pacf <- ggPacf(pharma_ts)+ggtitle("PACF Plot for Pzifer Stock ") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef") 
grid.arrange(pharma_acf, pharma_pacf, nrow=2)
```

## Financial/Economy: Biotechnology

```{r biotech_acf_pacf}
#| code-fold: true
#| warning: false

biotech_acf <- ggAcf(biotech_ts)+ggtitle("ACF Plot for Vertex Stock ") + theme_bw() +
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

biotech_pacf <- ggPacf(biotech_ts)+ggtitle("PACF Plot for Vertex Stock ") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")
grid.arrange(biotech_acf, biotech_pacf, nrow=2)
```

## Financial/Economy: Generic and Specialty Drug

```{r drug_acf_pacf}
#| code-fold: true
#| warning: false

drug_acf <- ggAcf(drug_ts)+ggtitle("ACF Plot for TEVA Stock ") + theme_bw() +
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

drug_pacf <- ggPacf(drug_ts)+ggtitle("PACF Plot for TEVA Stock ") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")
grid.arrange(drug_acf, drug_pacf, nrow=2)
```

## Financial/Economy: Small and Medium-sized Biotech

```{r smallbiotech_acf_pacf}
#| code-fold: true
#| warning: false

small_biotech_acf <- ggAcf(small_biotech_ts)+ggtitle("ACF Plot for SAGE Stock ") + theme_bw() +
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

small_biotech_pacf <- ggPacf(small_biotech_ts)+ggtitle("PACF Plot for SAGE Stock ") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")
grid.arrange(small_biotech_acf, small_biotech_pacf, nrow=2)
```

## Public Health Outcomes: Average Life Expectancy

```{r life_expectancy_acf_pacf}
#| code-fold: true
#| warning: false

life_expectancy_acf <- ggAcf(ale_ts)+ggtitle("ACF Plot for Average Life Expectancy ") + theme_bw() +
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

life_expectancy_pacf <- ggPacf(ale_ts)+ggtitle("PACF Plot for Average Life Expectancy ") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(life_expectancy_acf, life_expectancy_pacf, nrow=2)
```

## Public Health Outcomes: Deaths of Major Diseases

```{r deaths_major_diseases_acf_pacf}
#| code-fold: true
#| warning: false

deaths_cancer_acf <- ggAcf(cancer_ts)+ggtitle("ACF Plot for Deaths of Cancer") + theme_bw() +
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

deaths_cancer_pacf <- ggPacf(cancer_ts)+ggtitle("PACF Plot for Deaths of Cancer") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

deaths_diabetes_acf <- ggAcf(diabetes_ts)+ggtitle("ACF Plot for Deaths of Diabetes") + theme_bw() +
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

deaths_diabetes_pacf <- ggPacf(diabetes_ts)+ggtitle("PACF Plot for Deaths of Diabetes") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

deaths_heart_acf <- ggAcf(heart_ts)+ggtitle("ACF Plot for Deaths of Heart Disease") + theme_bw() +
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

deaths_heart_pacf <- ggPacf(heart_ts)+ggtitle("PACF Plot for Deaths of Heart Disease") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(deaths_cancer_acf, deaths_cancer_pacf, deaths_diabetes_acf, deaths_diabetes_pacf, deaths_heart_acf, deaths_heart_pacf, nrow=3)
```

## Public Health Outcomes: Infant Mortality Rate

```{r infant_mortality_acf_pacf}
#| code-fold: true
#| warning: false

infant_mortality_acf <- ggAcf(infant_mortality_ts)+ggtitle("ACF Plot for Infant Mortality Rate") + theme_bw() +
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

infant_mortality_pacf <- ggPacf(infant_mortality_ts)+ggtitle("PACF Plot for Infant Mortality Rate") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(infant_mortality_acf, infant_mortality_pacf, nrow=2)
```

## Health Access and Utilization: Health Insurance Coverage

```{r health_insurance_acf_pacf}
#| code-fold: true
#| warning: false

health_insurance_acf <- ggAcf(health_insurance_ts)+ggtitle("ACF Plot for Health Insurance Coverage") + theme_bw() +
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

health_insurance_pacf <- ggPacf(health_insurance_ts)+ggtitle("PACF Plot for Health Insurance Coverage") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(health_insurance_acf, health_insurance_pacf, nrow=2)
```

## Health Access and Utilization: Emergency Room Visits

```{r emergency_room_acf_pacf}
#| code-fold: true
#| warning: false

emergency_room_acf <- ggAcf(emergency_room_ts)+ggtitle("ACF Plot for Emergency Room Visits") + theme_bw() +
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

emergency_room_pacf <- ggPacf(emergency_room_ts)+ggtitle("PACF Plot for Emergency Room Visits") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(emergency_room_acf, emergency_room_pacf, nrow=2)
```

## Healthcare Costs: Prescription Drug Costs

```{r prescription_drug_acf_pacf}
#| code-fold: true
#| warning: false

prescription_drug_acf <- ggAcf(prescription_drug_ts)+ggtitle("ACF Plot for Prescription Drug Costs") + theme_bw() +
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

prescription_drug_pacf <- ggPacf(prescription_drug_ts)+ggtitle("PACF Plot for Prescription Drug Costs") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(prescription_drug_acf, prescription_drug_pacf, nrow=2)
```

## Healthcare Costs: GDP Contribution of Healthcare Industry

```{r gdp_healthcare_acf_pacf}
#| code-fold: true
#| warning: false

gdp_healthcare_acf <- ggAcf(gdp_healthcare_ts)+ggtitle("ACF Plot for GDP Contribution of Healthcare Industry") + theme_bw() +
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

gdp_healthcare_pacf <- ggPacf(gdp_healthcare_ts)+ggtitle("PACF Plot for GDP Contribution of Healthcare Industry") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(gdp_healthcare_acf, gdp_healthcare_pacf, nrow=2)
```

## Health Behavoir and Risk Factors: Smoking Prevalence

```{r smoking_acf_pacf}
#| code-fold: true
#| warning: false

smoking_acf <- ggAcf(adult_smokers_ts)+ggtitle("ACF Plot for Smoking Prevalence") + theme_bw() +
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

smoking_pacf <- ggPacf(adult_smokers_ts)+ggtitle("PACF Plot for Smoking Prevalence") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(smoking_acf, smoking_pacf, nrow=2)
```

## Health Behavior and Risk Factors: Alcohol Consumption

```{r alcohol_acf_pacf}
#| code-fold: true
#| warning: false

alcohol_acf <- ggAcf(alcohol_consumption_ts)+ggtitle("ACF Plot for Alcohol Consumption") + theme_bw() +
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

alcohol_pacf <- ggPacf(alcohol_consumption_ts)+ggtitle("PACF Plot for Alcohol Consumption") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(alcohol_acf, alcohol_pacf, nrow=2)
```
:::

**Financial/Economy: Large-scale Pharmaceutical:** The ACF plot shows a significant spike at lag 1, which quickly drops below the significance level and moves around zero for subsequent lags. The significant autocorrelation at the first lag suggests that there is some correlation between a value and its immediate predecessor. The PACF plot has a significant spike at lag 1 too, after which the partial autocorrelations fall within the significance bounds. The ACF plot displaying a significant spike at lag 1 followed by a quick decline to non-significant levels could suggest that the series is not stationary, as non-stationary data often have one or more autocorrelation coefficients that are significantly non-zero. However, the drop off after the first lag does indicate that the series may be close to stationarity or made stationary with differencing. The PACF plot also supports this possibility, as the significant partial autocorrelation at lag 1 can be indicative of a need to difference the series once to achieve stationarity.

**Financial/Economy: Biotechnology:** There is a significant autocorrelation at the first lag, which quickly diminishes and remains within the confidence bounds for subsequent lags. This pattern suggests that the series could be integrated of order 1, meaning differencing the series once may achieve stationarity. The PACF shows a significant spike at the first lag and no other significant spikes beyond the confidence bounds for higher-order lags. This cut-off after the first lag in the PACF suggests that an AR(1) model might be appropriate for the data after it has been differenced once. The `Vertex stock` time series seems to exhibit non-stationarity due to the significant autocorrelation at lag 1 in the ACF plot. The lack of other significant lags in both ACF and PACF plots also suggests that the series does not have a complex seasonal or autoregressive structure.

**Financial/Economy: Generic and Specialty Drug:** There is a gradual decline in the ACF values as the lags increase, which suggests that the series could be an AR process because the autocorrelations are slowly decaying. The ACF values are positive and significant for a number of lags, which implies that there is a positive correlation between the current value and its past values. The PACF cuts off after the first lag, which is typically indicative of an AR(1) process. This means that after accounting for the first lag, the partial autocorrelations of the following lags are not significant. The slow decay of the ACF plot suggests that the series may be non-stationary, as a stationary time series would typically show a quick drop-off in the ACF values. However, the definitive conclusion about stationarity cannot be drawn from the ACF and PACF plots alone.

**Financial/Economy: Small and Medium-sized Biotech:** In the ACF plot for `SAGE stock`, we observe that the first lag is significant as the bar extends beyond the confidence interval bounds, and there are a few other lags that also appear significant, suggesting some level of autocorrelation in the data. The ACF bars decrease as the lags increase, but since they are significant at various points, it suggests that the data might not be stationary as one of the indicators of stationarity is that autocorrelations should quickly drop off to zero as the lag increases. In the PACF plot, the first lag is also significant, and the subsequent lags are mostly within the bounds, suggesting that there is no significant partial autocorrelation at those lags. This could mean that after accounting for the immediate past value (lag 1), the autocorrelation with further past values is not significant.

**Public Health Outcomes: Average Life Expectancy:** The ACF plot for average life expectancy shows significant autocorrelation at multiple lag intervals, which does not quickly decay as the lags increase. This suggests the data may exhibit a non-stationary behavior because in a stationary time series, we would expect the ACF values to decrease rapidly. The PACF plot indicates a significant spike at the first lag and a few others sporadically, but it is not as systematic as in the ACF plot, suggesting that the immediate past value has a strong relationship with the current value, but this relationship does not persist strongly at higher lags. It's likely that the time series is non-stationary and may require differencing to achieve stationarity.

**Public Health Outcomes: Deaths of Major Diseases(Cancer, Heart Disease, Diabetes)** For **Deaths of Cancer**, the ACF plot shows significant autocorrelations at multiple lags, which do not taper off, indicating a non-stationary series. The PACF plot shows a sharp cut-off after the first lag, suggesting an AR(1) process might be appropriate after differencing. For **Deaths of Diabetes**, the ACF plot again shows a gradual decline in autocorrelation but with several significant lags, hinting at a non-stationary series. The PACF plot has a significant spike at the last lag, which could suggest a seasonal component or the need for a higher-order AR model. For **Deaths of Heart Disease**, the ACF plot shows a slow decay in autocorrelations with many significant lags, suggesting non-stationarity. The PACF plot is similar to that of cancer deaths, with a significant spike at lag 1 and then a cut-off, indicating a possible AR(1) process after differencing.

**Public Health Outcomes: Infant Mortality Rate** The ACF plot for infant mortality rate shows a slow decay in autocorrelations with many significant lags, suggesting non-stationary. The PACF plot shows a significant spike at lag 1 and then a cut-off.

**Healthcare Access and Utilization: Health Insurance Coverage** The ACF plot for health insurance coverage shows a few significant autocorrelations at non-consecutive lags, indicating that there are some individual past values that have a correlation with the current value. However, there isn't a clear decay pattern, which can sometimes be indicative of a non-stationary series. The PACF plot shows a significant partial autocorrelation at several lags and all other lags are within the confidence interval.

**Healthcare Access and Utilization: Emergency Room Visits** The ACF plot for emergency room visits shows significant autocorrelations at several lags which are somewhat spread out and not following a clear decay pattern. This could suggest a complex seasonality or that the data is non-stationary. The PACF plot reveals a significant partial autocorrelation at the first several lags, but the subsequent lags are within the confidence bounds.

**Healthcare Costs: Costs of Prescription Drugs** The ACF plot for prescription drug costs shows a significant autocorrelation at the first 3 lags, then occasional significant autocorrelations at various other lags without a consistent pattern. This suggests that there are correlations at specific points in time, but not in a regular, decaying manner as one would expect in a stationary series. The PACF plot has a significant spike at the first lag and other significant negative spikes around lag 18.

**Healthcate Costs: GDP Contribution of Healthcare Industry** The ACF plot for GDP contribution of the healthcare industry shows that autocorrelations are significant at a few lags, but there is no clear pattern of decay, which often suggests non-stationarity. The PACF plot shows a random pattern, with most of the lags falling within the confidence bounds. This indicates that there are no significant partial autocorrelations after accounting for previous lags. Given these characteristics, the time series may be stationary, but the presence of significant autocorrelations at a few lags in the ACF suggests that the series could have some autoregressive elements.

**Health Behavior and Risk Factors: Smoking Prevelance** The first lag is significantly positive, which suggests a strong correlation with the immediate past value. Several other lags are also significant, though not in a consistent or decaying pattern. This could indicate a complex process with multiple periods influencing the series. In the PACF plot, there's a significant spike at the first lag, which again indicates that the previous value has a significant effect on the current value. The presence of multiple significant lags in the ACF without a clear decay pattern could suggest that the series is not stationary and might be influenced by seasonal or cyclical components.

**Health Behavior and Risk Factors: Alcohol Consumpition** There are several lags where the autocorrelation is outside of the confidence bounds, indicating significant autocorrelation at these specific lags. For the PACF plot, the partial autocorrelations are mostly within the confidence bounds. The ACF plot suggests that there is some underlying pattern or seasonality to the alcohol consumption data, as indicated by the significant lags. This pattern is not captured by the PACF, which suggests that the relationship is not purely autoregressive. Given the significant lags in the ACF, a more complex model than a simple AR(1) might be needed, potentially an ARIMA model with seasonal components, to account for the periodic spikes in the ACF. The data may not be stationary, or it may exhibit seasonality that should be accounted for in the time series model.

# 5. Dickey-Fuller Test

::: panel-tabset
## Financial/Economy: Large-scale Pharmaceutical

```{r large_pharma_dickey_fuller}
#| code-fold: true
#| warning: false

tseries::adf.test(pharma_ts)
```

## Financial/Economy: Biotechnology

```{r biotech_dickey_fuller}
#| code-fold: true
#| warning: false

tseries::adf.test(biotech_ts)
```

## Financial/Economy: Generic and Specialty Drug

```{r drug_dickey_fuller}
#| code-fold: true
#| warning: false

tseries::adf.test(drug_ts)

```

## Financial/Economy: Small and Medium-sized Biotech

```{r smallbiotech_dickey_fuller}
#| code-fold: true
#| warning: false

tseries::adf.test(small_biotech_ts)
```

## Public Health Outcomes: Average Life Expectancy

```{r life_expectancy_dickey_fuller}
#| code-fold: true
#| warning: false

tseries::adf.test(ale_ts)

```

## Public Health Outcomes: Deaths of Major Diseases

```{r major_diseases_dickey_fuller}
#| code-fold: true
#| warning: false

tseries::adf.test(cancer_ts)
tseries::adf.test(diabetes_ts)
tseries::adf.test(heart_ts)

```

## Public Health Outcomes: Infant Mortality Rate

```{r infant_mortality_dickey_fuller}
#| code-fold: true
#| warning: false

tseries::adf.test(infant_mortality_ts)
```

## Health Access and Utilization: Health Insurance Coverage

```{r health_insurance_dickey_fuller}
#| code-fold: true
#| warning: false

tseries::adf.test(health_insurance_ts)
```

## Health Access and Utilization: Emergency Room Visits

```{r er_visits_dickey_fuller}
#| code-fold: true
#| warning: false

tseries::adf.test(emergency_room_ts)
```

## Healthcare Costs: Costs of Prescription Drugs

```{r prescription_drug_dickey_fuller}
#| code-fold: true
#| warning: false

tseries::adf.test(prescription_drug_ts)
```

## Healthcare Costs: GDP Contribution of Healthcare Industry

```{r gdp_healthcare_dickey_fuller}
#| code-fold: true
#| warning: false

tseries::adf.test(gdp_healthcare_ts)
```

## Health Behavoir and Risk Factors: Smoking Prevalence

```{r smoking_dickey_fuller}
#| code-fold: true
#| warning: false

tseries::adf.test(adult_smokers_ts)

```

## Health Behavior and Risk Factors: Alcohol Consumption

```{r alcohol_dickey_fuller}
#| code-fold: true
#| warning: false

tseries::adf.test(alcohol_consumption_ts)

```
:::

**Financial/Economy: Large-scale Pharmaceutical:** With a p-value greater than 0.05, there is insufficient evidence to reject the null hypothesis at the 5% significance level, indicating that the series is likely non-stationary. Additional adjustments may be necessary to achieve stationarity.

**Financial/Economy: Biotechnology:** The p-value is below 0.05, allowing us to reject the null hypothesis at the 5% significance level. This suggests that the series is stationary based on the Dickey-Fuller test, though further verification may be required.

**Financial/Economy: Generic and Specialty Drug:** Since the p-value exceeds 0.05, we lack sufficient evidence to reject the null hypothesis at the 5% significance level, suggesting non-stationarity. Adjustments are needed to render the series stationary.

**Financial/Economy: Small and Medium-sized Biotech:** The p-value being greater than 0.05 indicates insufficient evidence to reject the null hypothesis, suggesting that the series is non-stationary. Further modifications are necessary to stabilize the series.

**Public Health Outcomes: Average Life Expectancy:** With a p-value less than 0.05, we can reject the null hypothesis at the 5% significance level, suggesting that the series is stationary as per the Dickey-Fuller test. Additional analysis may be needed for confirmation.

**Public Health Outcomes: Deaths of Major Diseases(Cancer, Heart Disease, Diabetes)** All p-values are below 0.05, enabling us to reject the null hypothesis, indicating stationarity in the series according to the Dickey-Fuller test. Further analysis might be required for confirmation.

**Public Health Outcomes: Infant Mortality Rate** The p-value being below 0.05 means the null hypothesis can be rejected at the 5% significance level, suggesting stationarity in the series per the Dickey-Fuller test. This conclusion may require further validation.

**Healthcare Access and Utilization: Health Insurance Coverage** A p-value above 0.05 means we cannot reject the null hypothesis at the 5% level, indicating non-stationarity. Additional measures are required to make the series stationary.

**Healthcare Access and Utilization: Emergency Room Visits** The p-value being below 0.05 allows for the rejection of the null hypothesis at the 5% significance level, suggesting stationarity according to the Dickey-Fuller test. Further confirmation may be necessary.

**Healthcare Costs: Costs of Prescription Drugs** With a p-value less than 0.05, the null hypothesis can be rejected at the 5% significance level, suggesting that the series is stationary as per the Dickey-Fuller test. Additional analysis might be required.

**Healthcate Costs: GDP Contribution of Healthcare Industry** With the p-value exceeding 0.05, there is insufficient evidence to reject the null hypothesis, indicating that the series is non-stationary. Further adjustments are needed to achieve stationarity.

**Health Behavior and Risk Factors: Smoking Prevelance** The p-value being below 0.05 enables the rejection of the null hypothesis at the 5% significance level, indicating stationarity in the series according to the Dickey-Fuller test. Further analysis might be warranted.

**Health Behavior and Risk Factors: Alcohol Consumpition** A p-value below 0.05 allows us to reject the null hypothesis at the 5% significance level, suggesting that the series is stationary per the Dickey-Fuller test. However, further analysis may be necessary to confirm this result.

# 6. Detrend vs. Difference

::: panel-tabset
## Financial/Economy: Large-scale Pharmaceutical

```{r large_pharma_detrend_diff}
#| code-fold: true
#| warning: false

require(gridExtra)
fit_pharma = lm(pharma_ts~time(pharma_ts), na.action=NULL) 
plot1<-autoplot(resid(fit_pharma), main="Detrended", colour = "#27aeef") + theme_bw()
plot2<-autoplot(diff(pharma_ts), main="First Difference", colour = "#27aeef") + theme_bw()

grid.arrange(plot1, plot2,nrow=2)
```

## Financial/Economy: Biotechnology

```{r biotech_detrend_diff}
#| code-fold: true
#| warning: false

fit_biotech = lm(biotech_ts~time(biotech_ts), na.action=NULL)
plot1<-autoplot(resid(fit_biotech), main="Detrended", colour = "#27aeef") + theme_bw()
plot2<-autoplot(diff(biotech_ts), main="First Difference", colour = "#27aeef") + theme_bw()

grid.arrange(plot1, plot2,nrow=2)

```

## Financial/Economy: Generic and Specialty Drug

```{r drug_detrend_diff}
#| code-fold: true
#| warning: false

fit_drug = lm(drug_ts~time(drug_ts), na.action=NULL)
plot1<-autoplot(resid(fit_drug), main="Detrended", colour = "#27aeef") + theme_bw()
plot2<-autoplot(diff(drug_ts), main="First Difference", colour = "#27aeef") + theme_bw()

grid.arrange(plot1, plot2,nrow=2)

```

## Financial/Economy: Small and Medium-sized Biotech

```{r smallbiotech_detrend_diff}
#| code-fold: true
#| warning: false

fit_small_biotech = lm(small_biotech_ts~time(small_biotech_ts), na.action=NULL)
plot1<-autoplot(resid(fit_small_biotech), main="Detrended", colour = "#27aeef") + theme_bw()
plot2<-autoplot(diff(small_biotech_ts), main="First Difference", colour = "#27aeef") + theme_bw()

grid.arrange(plot1, plot2,nrow=2)
```

## Public Health Outcomes: Average Life Expectancy

```{r life_expectancy_detrend_diff}
#| code-fold: true
#| warning: false

fit_life_expectancy = lm(ale_ts~time(ale_ts), na.action=NULL)
plot1<-autoplot(resid(fit_life_expectancy), main="Detrended", colour = "#27aeef") + theme_bw()
plot2<-autoplot(diff(ale_ts), main="First Difference", colour = "#27aeef") + theme_bw()

grid.arrange(plot1, plot2,nrow=2)
```

## Public Health Outcomes: Deaths of Major Diseases(Cancer, Heart Disease, Diabetes)

```{r deaths_detrend_diff}
#| code-fold: true
#| warning: false

fit_cancer = lm(cancer_ts~time(cancer_ts), na.action=NULL)
plot1_cancer<-autoplot(resid(fit_cancer), main="Detrended", colour = "#27aeef") + theme_bw()
plot2_cancer<-autoplot(diff(cancer_ts), main="First Difference", colour = "#27aeef") + theme_bw()

fit_heart = lm(heart_ts~time(heart_ts), na.action=NULL)
plot1_heart<-autoplot(resid(fit_heart), main="Detrended", colour = "#27aeef") + theme_bw()
plot2_heart<-autoplot(diff(heart_ts), main="First Difference", colour = "#27aeef") + theme_bw()

fit_diabetes = lm(diabetes_ts~time(diabetes_ts), na.action=NULL)
plot1_diabetes<-autoplot(resid(fit_diabetes), main="Detrended", colour = "#27aeef") + theme_bw()
plot2_diabetes<-autoplot(diff(diabetes_ts), main="First Difference", colour = "#27aeef") + theme_bw()

grid.arrange(plot1_cancer, plot2_cancer, plot1_heart, plot2_heart, plot1_diabetes, plot2_diabetes, nrow=3)

```

## Public Health Outcomes: Infant Mortality Rate

```{r infant_mortality_detrend_diff}
#| code-fold: true
#| warning: false

fit_infant_mortality = lm(infant_mortality_ts~time(infant_mortality_ts), na.action=NULL)
plot1<-autoplot(resid(fit_infant_mortality), main="Detrended", colour = "#27aeef") + theme_bw()
plot2<-autoplot(diff(infant_mortality_ts), main="First Difference", colour = "#27aeef") + theme_bw()

grid.arrange(plot1, plot2,nrow=2)
```

## Healthcare Access and Utilization: Health Insurance Coverage

```{r health_insurance_detrend_diff}
#| code-fold: true
#| warning: false

fit_health_insurance = lm(health_insurance_ts~time(health_insurance_ts), na.action=NULL)
plot1<-autoplot(resid(fit_health_insurance), main="Detrended", colour = "#27aeef") + theme_bw()
plot2<-autoplot(diff(health_insurance_ts), main="First Difference", colour = "#27aeef") + theme_bw()

grid.arrange(plot1, plot2,nrow=2)
```

## Healthcare Access and Utilization: Emergency Room Visits

```{r er_visits_detrend_diff}
#| code-fold: true
#| warning: false

fit_er_visits = lm(emergency_room_ts~time(emergency_room_ts), na.action=NULL)
plot1<-autoplot(resid(fit_er_visits), main="Detrended", colour = "#27aeef") + theme_bw()
plot2<-autoplot(diff(emergency_room_ts), main="First Difference", colour = "#27aeef") + theme_bw()

grid.arrange(plot1, plot2,nrow=2)
```

## Healthcare Costs: Prescription Drug Costs

```{r prescription_costs_detrend_diff}
#| code-fold: true
#| warning: false

fit_prescription_costs = lm(prescription_drug_ts~time(prescription_drug_ts), na.action=NULL)
plot1<-autoplot(resid(fit_prescription_costs), main="Detrended", colour = "#27aeef") + theme_bw()
plot2<-autoplot(diff(prescription_drug_ts), main="First Difference", colour = "#27aeef") + theme_bw()

grid.arrange(plot1, plot2,nrow=2)

```

## Healthcare Costs: GDP Contribution of Healthcare Industry

```{r gdp_healthcare_detrend_diff}
#| code-fold: true
#| warning: false

fit_gdp_healthcare = lm(gdp_healthcare_ts~time(gdp_healthcare_ts), na.action=NULL)
plot1<-autoplot(resid(fit_gdp_healthcare), main="Detrended", colour = "#27aeef") + theme_bw()
plot2<-autoplot(diff(gdp_healthcare_ts), main="First Difference", colour = "#27aeef") + theme_bw()

grid.arrange(plot1, plot2,nrow=2)
```

## Health Behaviors: Smoking Prevalence

```{r smoking_detrend_diff}
#| code-fold: true
#| warning: false

fit_smoking = lm(adult_smokers_ts~time(adult_smokers_ts), na.action=NULL)
plot1<-autoplot(resid(fit_smoking), main="Detrended", colour = "#27aeef") + theme_bw()
plot2<-autoplot(diff(adult_smokers_ts), main="First Difference", colour = "#27aeef") + theme_bw()

grid.arrange(plot1, plot2,nrow=2)
```

## Health Behaviors: Alcohol Consumption

```{r alcohol_detrend_diff}
#| code-fold: true
#| warning: false

fit_alcohol = lm(alcohol_consumption_ts~time(alcohol_consumption_ts), na.action=NULL)
plot1<-autoplot(resid(fit_alcohol), main="Detrended", colour = "#27aeef") + theme_bw()
plot2<-autoplot(diff(alcohol_consumption_ts), main="First Difference", colour = "#27aeef") + theme_bw()

grid.arrange(plot1, plot2,nrow=2)

```
:::

**Detrending** and **first differencing** are two techniques used to transform time series data towards stationarity, but they differ in their methods. Detrending involves removing the underlying trend from the data by estimating the trend component and subtracting it from the original series. This method primarily focuses on eliminating the mean trend but may leave other non-stationary elements such as seasonality or variance changes.

On the other hand, first differencing works by calculating the difference between consecutive observations in the series, using the formula:

$$
\Delta y_t = y_t - y_{t-1}
$$

This method not only addresses the linear trends by focusing on the changes between observations but also helps in stabilizing the mean of the series. However, it might not effectively manage non-linear trends or pronounced seasonal patterns. Differencing is particularly useful when the series exhibits consistent upward or downward trends.

Choosing between detrending and first differencing depends on the characteristics of the specific dataset involved. Each method has its strengths and is suited to different types of trend and non-stationarity within the time series.

# 7. Original vs. First Difference

::: panel-tabset
## Financial/Economy: Large-scale Pharmaceutical

```{r large_pharma_original_first_diff}
#| code-fold: true
#| warning: false


plot1 <- ggAcf(pharma_ts, 48, main="Original Data: Pzifer Stock") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef") 
plot2 <- ggAcf(resid(fit_pharma), 48, main="Detrended Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef") 
plot3 <- ggAcf(diff(pharma_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef") 

grid.arrange(plot1, plot2, plot3,ncol=3)
```

## Financial/Economy: Biotechnology

```{r biotech_original_first_diff}
#| code-fold: true
#| warning: false

plot1 <- ggAcf(biotech_ts, 48, main="Original Data: Biotech Stock") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot2 <- ggAcf(resid(fit_biotech), 48, main="Detrended Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot3 <- ggAcf(diff(biotech_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(plot1, plot2, plot3,ncol=3)
```

## Financial/Economy: Generic and Specialty Drug

```{r drug_original_first_diff}
#| code-fold: true
#| warning: false

plot1 <- ggAcf(drug_ts, 48, main="Original Data: Drug Stock") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot2 <- ggAcf(resid(fit_drug), 48, main="Detrended Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot3 <- ggAcf(diff(drug_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(plot1, plot2, plot3,ncol=3)
```

## Financial/Economy: Small Biotechnology

```{r smallbiotech_original_first_diff}
#| code-fold: true
#| warning: false

plot1 <- ggAcf(small_biotech_ts, 48, main="Original Data: Small Biotech Stock") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot2 <- ggAcf(resid(fit_small_biotech), 48, main="Detrended Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot3 <- ggAcf(diff(small_biotech_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(plot1, plot2, plot3,ncol=3)
```

## Public Health Outcomes: Average Life Expectancy

```{r life_expectancy_original_first_diff}
#| code-fold: true
#| warning: false

plot1 <- ggAcf(ale_ts, 48, main="Original Data: Life Expectancy") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot2 <- ggAcf(resid(fit_life_expectancy), 48, main="Detrended Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot3 <- ggAcf(diff(ale_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(plot1, plot2, plot3,ncol=3)
```

## Public Health Outcomes: Deaths of Major Diseases

```{r deaths_major_diseases_original_first_diff}
#| code-fold: true
#| warning: false

# Cancer
plot1_cancer <- ggAcf(cancer_ts, 48, main="Original Data: Deaths of Cancer") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot2_cancer <- ggAcf(resid(fit_cancer), 48, main="Detrended Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot3_cancer <- ggAcf(diff(cancer_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(plot1_cancer, plot2_cancer, plot3_cancer,ncol=3)

# Heart Disease
plot1_heart <- ggAcf(heart_ts, 48, main="Original Data: Deaths of Heart Disease") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot2_heart <- ggAcf(resid(fit_heart), 48, main="Detrended Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot3_heart <- ggAcf(diff(heart_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(plot1_heart, plot2_heart, plot3_heart,ncol=3)

# Diabetes
plot1_diabetes <- ggAcf(diabetes_ts, 48, main="Original Data: Deaths of Diabetes") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot2_diabetes <- ggAcf(resid(fit_diabetes), 48, main="Detrended Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot3_diabetes <- ggAcf(diff(diabetes_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(plot1_diabetes, plot2_diabetes, plot3_diabetes,ncol=3)
```

## Public Health Outcomes: Infant Mortality

```{r infant_mortality_original_first_diff}
#| code-fold: true
#| warning: false

plot1 <- ggAcf(infant_mortality_ts, 48, main="Original Data: Infant Mortality") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot2 <- ggAcf(resid(fit_infant_mortality), 48, main="Detrended Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot3 <- ggAcf(diff(infant_mortality_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(plot1, plot2, plot3,ncol=3)
```

## Healthcare Access and Utilization: Health Insurance Coverage

```{r health_insurance_original_first_diff}
#| code-fold: true
#| warning: false

plot1 <- ggAcf(health_insurance_ts, 48, main="Original Data: Health Insurance Coverage") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot2 <- ggAcf(resid(fit_health_insurance), 48, main="Detrended Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot3 <- ggAcf(diff(health_insurance_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(plot1, plot2, plot3,ncol=3)
```

## Healthcare Access and Utilization: Emergency Room Visits

```{r emergency_room_original_first_diff}
#| code-fold: true
#| warning: false

plot1 <- ggAcf(emergency_room_ts, 48, main="Original Data: Emergency Room Visits") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot2 <- ggAcf(resid(fit_er_visits), 48, main="Detrended Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot3 <- ggAcf(diff(emergency_room_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(plot1, plot2, plot3,ncol=3)
```

## Healthcare Costs: Costs of Prescription Drugs

```{r prescription_drug_original_first_diff}
#| code-fold: true
#| warning: false

plot1 <- ggAcf(prescription_drug_ts, 48, main="Original Data: Costs of Prescription Drugs") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot2 <- ggAcf(resid(fit_prescription_costs), 48, main="Detrended Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot3 <- ggAcf(diff(prescription_drug_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(plot1, plot2, plot3,ncol=3)
```

## Healthcare Costs: GDP Contribution of Healthcare Industry

```{r gdp_healthcare_original_first_diff}
#| code-fold: true
#| warning: false

plot1 <- ggAcf(gdp_healthcare_ts, 48, main="Original Data: GDP Contribution of Healthcare Industry") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot2 <- ggAcf(resid(fit_gdp_healthcare), 48, main="Detrended Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot3 <- ggAcf(diff(gdp_healthcare_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(plot1, plot2, plot3,ncol=3)
```

## Health Behavior and Risk Factors: Smoking Prevalence

```{r smoking_prevalence_original_first_diff}
#| code-fold: true
#| warning: false

plot1 <- ggAcf(adult_smokers_ts, 48, main="Original Data: Smoking Prevalence") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot2 <- ggAcf(resid(fit_smoking), 48, main="Detrended Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot3 <- ggAcf(diff(adult_smokers_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(plot1, plot2, plot3,ncol=3)
```

## Health Behavior and Risk Factors: Alcohol Consumption

```{r alcohol_consumption_original_first_diff}
#| code-fold: true
#| warning: false

plot1 <- ggAcf(alcohol_consumption_ts, 48, main="Original Data: Alcohol Consumption") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot2 <- ggAcf(resid(fit_alcohol), 48, main="Detrended Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

plot3 <- ggAcf(diff(alcohol_consumption_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

grid.arrange(plot1, plot2, plot3,ncol=3)
```
:::

First differencing is a widely used technique to transform time series data into a stationary state. This involves computing the difference between consecutive values in the series, as represented by the formula:

$$
\Delta y_t = y_t - y_{t-1}
$$

In the formula, we have the following variables:

-   $\Delta y_t$: the difference at time t

-   $y_t$: the value of the series at time t

-   $y_{t−1}$: the value of the series at time t−1

This method effectively removes linear trends, potentially leading to stationarity. It is particularly useful when the series displays consistent upward or downward trends. However, first differencing does not guarantee stationarity in all cases; some series may require additional transformations, such as second differencing or other methods, to achieve full stationarity.

The plots provided in this section illustrate the transformation from original to first differenced data. Most of the series appear to become stationary following this transformation, although a few retain minor autocorrelations (values slightly over 0.2, but not significant), except for the Health Insurance Coverage Series and Emergency Room Visits Series. For these, second differencing might be necessary to achieve stationarity.

# 8. First vs. Second Difference

::: panel-tabset
## Financial/Economy: Large-scale Pharmaceutical

```{r large_pharma_first_second_diff}
#| code-fold: true
#| warning: false

ggAcf(diff(pharma_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef") 

ggAcf(diff(diff(pharma_ts)), 48, main="Second Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")
```

## Financial/Economy: Biotechnology

```{r biotech_first_second_diff}
#| code-fold: true
#| warning: false

ggAcf(diff(biotech_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef") 

ggAcf(diff(diff(biotech_ts)), 48, main="Second Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

```

## Financial/Economy: Generic and Specialty Drug

```{r drug_first_second_diff}
#| code-fold: true
#| warning: false

ggAcf(diff(drug_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

ggAcf(diff(diff(drug_ts)), 48, main="Second Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

```

## Financial/Economy: Small Biotechnology

```{r smallbiotech_first_second_diff}
#| code-fold: true
#| warning: false

ggAcf(diff(small_biotech_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

ggAcf(diff(diff(small_biotech_ts)), 48, main="Second Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

```

## Public Health Outcomes: Average Life Expectancy

```{r life_expectancy_first_second_diff}
#| code-fold: true
#| warning: false

ggAcf(diff(ale_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

ggAcf(diff(diff(ale_ts)), 48, main="Second Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")


```

## Public Health Outcomes: Deaths of Major Diseases

```{r deaths_major_diseases_first_second_diff}
#| code-fold: true
#| warning: false

# Cancer

ggAcf(diff(cancer_ts), 48, main="First Differenced Data(Cancer)") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

ggAcf(diff(diff(cancer_ts)), 48, main="Second Differenced Data(Cancer)") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

# Heart Disease

ggAcf(diff(heart_ts), 48, main="First Differenced Data(Heart Disease)") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

ggAcf(diff(diff(heart_ts)), 48, main="Second Differenced Data(Heart Disease)") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

# Diabetes

ggAcf(diff(diabetes_ts), 48, main="First Differenced Data(Diabetes)") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

ggAcf(diff(diff(diabetes_ts)), 48, main="Second Differenced Data(Diabetes)") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

```

## Public Health Outcomes: Infant Mortality Rate

```{r infant_mortality_first_second_diff}
#| code-fold: true
#| warning: false

ggAcf(diff(infant_mortality_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

ggAcf(diff(diff(infant_mortality_ts)), 48, main="Second Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")


```

## Healthcare Access and Utilization: Health Insurance Coverage

```{r health_insurance_first_second_diff}
#| code-fold: true
#| warning: false

ggAcf(diff(health_insurance_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

ggAcf(diff(diff(health_insurance_ts)), 48, main="Second Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

```

## Healthcare Access and Utilization: Emergency Room Visits

```{r emergency_room_first_second_diff}
#| code-fold: true
#| warning: false

ggAcf(diff(emergency_room_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

ggAcf(diff(diff(emergency_room_ts)), 48, main="Second Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

```

## Healthcare Costs: Prescription Drug Costs

```{r prescription_drug_costs_first_second_diff}
#| code-fold: true
#| warning: false

ggAcf(diff(prescription_drug_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

ggAcf(diff(diff(prescription_drug_ts)), 48, main="Second Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")
```

## Healthcare Costs: GDP Contribution of Healthcare Industry

```{r gdp_healthcare_first_second_diff}
#| code-fold: true
#| warning: false

ggAcf(diff(gdp_healthcare_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

ggAcf(diff(diff(gdp_healthcare_ts)), 48, main="Second Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

```

## Health Behaviors: Smoking Prevalence

```{r smoking_prevalence_first_second_diff}
#| code-fold: true
#| warning: false

ggAcf(diff(adult_smokers_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

ggAcf(diff(diff(adult_smokers_ts)), 48, main="Second Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")
```

## Health Behaviors: Alcohol Consumption

```{r alcohol_consumption_first_second_diff}
#| code-fold: true
#| warning: false

ggAcf(diff(alcohol_consumption_ts), 48, main="First Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

ggAcf(diff(diff(alcohol_consumption_ts)), 48, main="Second Differenced Data") + theme_bw()+
  geom_segment(lineend = "butt", color = "#27aeef") +
    geom_hline(yintercept = 0, color = "#27aeef")

```
:::

First differencing and second differencing are techniques aimed at transforming a time series into a stationary state by addressing different types of non-stationarity. The primary difference between these techniques lies in the number of times the differencing operation is applied, as well as their effectiveness in handling various trends within the data.

First differencing is typically employed to eliminate linear trends in a time series. It involves subtracting the current value of the series from its preceding value, as follows: $$
\Delta y_t = y_t - y_{t-1}
$$

If the series remains non-stationary after the application of first differencing, second differencing may be used. This technique is more suited to removing quadratic trends or further stabilizing a series. Second differencing involves applying the differencing operation again to the series that has already undergone first differencing. The formula for second differencing is:

$$
\Delta^2y_t = (\Delta y_t) - (\Delta y_{t-1}) = y_t - 2y_{t-1} + y_{t-2}
$$ This method further refines the series by addressing deeper or more complex trends that first differencing may not fully resolve.

# 9. Adjusted Dickey-Fuller Test

::: panel-tabset
## Financial/Economy: Large-scale Pharmaceutical

```{r pharma_adf_adjust_test}
#| code-fold: true
#| warning: false

tseries::adf.test(diff(pharma_ts))
```

## Financial/Economy: Biotechnology

```{r biotech_adf_adjust_test}
#| code-fold: true
#| warning: false

tseries::adf.test(diff(biotech_ts))

```

## Financial/Economy: Generic and Specialty Drug

```{r drug_adf_adjust_test}
#| code-fold: true
#| warning: false

tseries::adf.test(diff(drug_ts))
```

## Financial/Economy: Small Biotechnology

```{r smallbiotech_adf_adjust_test}
#| code-fold: true
#| warning: false

tseries::adf.test(diff(small_biotech_ts))

```

## Public Health Outcomes: Average Life Expectancy

```{r life_expectancy_adf_adjust_test}
#| code-fold: true
#| warning: false

tseries::adf.test(diff(ale_ts))

```

## Public Health Outcomes: Deaths of Major Diseases

```{r major_diseases_adf_adjust_test}
#| code-fold: true
#| warning: false

# Cancer
tseries::adf.test(diff(cancer_ts))

# Heart Disease
tseries::adf.test(diff(heart_ts))

# Diabetes
tseries::adf.test(diff(diabetes_ts))
```

## Public Health Outcomes: Infant Mortality Rate

```{r infant_mortality_adf_adjust_test}
#| code-fold: true
#| warning: false

tseries::adf.test(diff(infant_mortality_ts))
```

## Healthcare Access and Utilization: Health Insurance Coverage

```{r health_insurance_adf_adjust_test}
#| code-fold: true
#| warning: false

tseries::adf.test(diff(health_insurance_ts))
```

## Healthcare Access and Utilization: Emergency Room Visits

```{r emergency_room_adf_adjust_test}
#| code-fold: true
#| warning: false

tseries::adf.test(diff(emergency_room_ts))
```

## Healthcare Costs: Prescription Drug Costs

```{r prescription_drug_adf_adjust_test}
#| code-fold: true
#| warning: false

tseries::adf.test(diff(prescription_drug_ts))
```

## Healthcare Costs: GDP Contribution of Healthcare Industry

```{r gdp_healthcare_adf_adjust_test}
#| code-fold: true
#| warning: false

tseries::adf.test(diff(gdp_healthcare_ts))
```

## Health Behaviors and Risk Factors: Smoking Prevalence

```{r smoking_prevalence_adf_adjust_test}
#| code-fold: true
#| warning: false

tseries::adf.test(diff(adult_smokers_ts))
```

## Health Behaviors and Risk Factors: Alcohol Consumption

```{r alcohol_consumption_adf_adjust_test}
#| code-fold: true
#| warning: false

tseries::adf.test(diff(alcohol_consumption_ts))
```
:::

Based on the results presented above, we have successfully transformed all the data series into stationary forms, except for the time series of `Generic and Specialty Drug stock`. The p-values for all other tests are below 0.05, providing sufficient evidence to reject the null hypothesis at the 5% significance level. Consequently, we can conclude that all series, with the exception of the Generic and Specialty Drug Stock series, are stationary. Further investigation into this particular stock may be warranted.

# 10. Moving Average Smoothing

::: panel-tabset
## Financial/Economy: Large-scale Pharmaceutical

```{r pharma_moving_avg}
#| code-fold: true
#| warning: false

pharma_df <- data.frame(
  Date = seq(as.Date("2019-01-01"), by = "months", length.out = length(pharma_ts)),
  Value = as.numeric(pharma_ts)
)

# Plot using ggplot
ggplot(pharma_df, aes(x = Date, y = Value)) + 
  geom_line(aes(color = "Data")) +
  geom_line(aes(y = zoo::rollapply(Value, 3, mean, fill = NA), color = "3-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 7, mean, fill = NA), color = "7-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 15, mean, fill = NA), color = "15-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 27, mean, fill = NA), color = "27-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 39, mean, fill = NA), color = "39-MA")) +
  xlab("Time") + ylab("Price") +
  ggtitle('Time Series Plot For Pzifer Stock with Moving Averages') +
  theme_bw()+
  scale_colour_manual(values=c("Data"="grey",
                               "3-MA"="violet",
                               "7-MA"="pink",
                               "15-MA"="blue",
                               "27-MA"="#5a3196",
                               "39-MA"="lightblue"),
                      breaks=c("Data", "3-MA", "7-MA", "15-MA", "27-MA", "39-MA"))
```

## Financial/Economy: Biotechnology

```{r biotech_moving_avg}
#| code-fold: true
#| warning: false

biotech_df <- data.frame(
  Date = seq(as.Date("2019-01-01"), by = "months", length.out = length(biotech_ts)),
  Value = as.numeric(biotech_ts)
)

# Plot using ggplot
ggplot(biotech_df, aes(x = Date, y = Value)) + 
  geom_line(aes(color = "Data")) +
  geom_line(aes(y = zoo::rollapply(Value, 3, mean, fill = NA), color = "3-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 7, mean, fill = NA), color = "7-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 15, mean, fill = NA), color = "15-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 27, mean, fill = NA), color = "27-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 39, mean, fill = NA), color = "39-MA")) +
  xlab("Time") + ylab("Price") +
  ggtitle('Time Series Plot For Vertex Stock with Moving Averages') +
  theme_bw()+
  scale_colour_manual(values=c("Data"="grey",
                               "3-MA"="violet",
                               "7-MA"="pink",
                               "15-MA"="blue",
                               "27-MA"="#5a3196",
                               "39-MA"="lightblue"),
                      breaks=c("Data", "3-MA", "7-MA", "15-MA", "27-MA", "39-MA"))

```

## Financial/Economy: Generic and Specialty Drug

```{r drug_moving_avg}
#| code-fold: true
#| warning: false

drug_df <- data.frame(
  Date = seq(as.Date("2019-01-01"), by = "months", length.out = length(drug_ts)),
  Value = as.numeric(drug_ts)
)

# Plot using ggplot
ggplot(drug_df, aes(x = Date, y = Value)) + 
  geom_line(aes(color = "Data")) +
  geom_line(aes(y = zoo::rollapply(Value, 3, mean, fill = NA), color = "3-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 7, mean, fill = NA), color = "7-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 15, mean, fill = NA), color = "15-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 27, mean, fill = NA), color = "27-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 39, mean, fill = NA), color = "39-MA")) +
  xlab("Time") + ylab("Price") +
  ggtitle('Time Series Plot For TEVA Stock with Moving Averages') +
  theme_bw()+
  scale_colour_manual(values=c("Data"="grey",
                               "3-MA"="violet",
                               "7-MA"="pink",
                               "15-MA"="blue",
                               "27-MA"="#5a3196",
                               "39-MA"="lightblue"),
                      breaks=c("Data", "3-MA", "7-MA", "15-MA", "27-MA", "39-MA"))

```

## Financial/Economy: Small Biotechnology

```{r smallbiotech_moving_avg}
#| code-fold: true
#| warning: false

smallbiotech_df <- data.frame(
  Date = seq(as.Date("2019-01-01"), by = "months", length.out = length(small_biotech_ts)),
  Value = as.numeric(small_biotech_ts)
)

# Plot using ggplot
ggplot(smallbiotech_df, aes(x = Date, y = Value)) + 
  geom_line(aes(color = "Data")) +
  geom_line(aes(y = zoo::rollapply(Value, 3, mean, fill = NA), color = "3-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 7, mean, fill = NA), color = "7-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 15, mean, fill = NA), color = "15-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 27, mean, fill = NA), color = "27-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 39, mean, fill = NA), color = "39-MA")) +
  xlab("Time") + ylab("Price") +
  ggtitle('Time Series Plot For SAGE Stock with Moving Averages') +
  theme_bw()+
  scale_colour_manual(values=c("Data"="grey",
                               "3-MA"="violet",
                               "7-MA"="pink",
                               "15-MA"="blue",
                               "27-MA"="#5a3196",
                               "39-MA"="lightblue"),
                      breaks=c("Data", "3-MA", "7-MA", "15-MA", "27-MA", "39-MA"))

```

## Public Health Outcomes: Average Life Expectancy

```{r life_expectancy_moving_avg}
#| code-fold: true
#| warning: false

life_expectancy_df <- data.frame(
  Date = seq(as.Date("2019-01-01"), by = "months", length.out = length(ale_ts)),
  Value = as.numeric(ale_ts)
)

# Plot using ggplot
ggplot(life_expectancy_df, aes(x = Date, y = Value)) + 
  geom_line(aes(color = "Data")) +
  geom_line(aes(y = zoo::rollapply(Value, 3, mean, fill = NA), color = "3-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 7, mean, fill = NA), color = "7-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 15, mean, fill = NA), color = "15-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 27, mean, fill = NA), color = "27-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 39, mean, fill = NA), color = "39-MA")) +
  xlab("Time") + ylab("Price") +
  ggtitle('Time Series Plot For Life Expectancy with Moving Averages') +
  theme_bw()+
  scale_colour_manual(values=c("Data"="grey",
                               "3-MA"="violet",
                               "7-MA"="pink",
                               "15-MA"="blue",
                               "27-MA"="#5a3196",
                               "39-MA"="lightblue"),
                      breaks=c("Data", "3-MA", "7-MA", "15-MA", "27-MA", "39-MA"))

```

## Public Health Outcomes: Deaths of Major Diseases

```{r deaths_moving_avg}
#| code-fold: true
#| warning: false

# Cancer
cancer_df <- data.frame(
  Date = seq(as.Date("2019-01-01"), by = "months", length.out = length(cancer_ts)),
  Value = as.numeric(cancer_ts)
)

# Plot using ggplot
ggplot(cancer_df, aes(x = Date, y = Value)) + 
  geom_line(aes(color = "Data")) +
  geom_line(aes(y = zoo::rollapply(Value, 3, mean, fill = NA), color = "3-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 7, mean, fill = NA), color = "7-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 15, mean, fill = NA), color = "15-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 27, mean, fill = NA), color = "27-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 39, mean, fill = NA), color = "39-MA")) +
  xlab("Time") + ylab("Price") +
  ggtitle('Time Series Plot For Cancer Deaths with Moving Averages') +
  theme_bw()+
  scale_colour_manual(values=c("Data"="grey",
                               "3-MA"="violet",
                               "7-MA"="pink",
                               "15-MA"="blue",
                               "27-MA"="#5a3196",
                               "39-MA"="lightblue"),
                      breaks=c("Data", "3-MA", "7-MA", "15-MA", "27-MA", "39-MA"))

# Heart Disease
heart_disease_df <- data.frame(
  Date = seq(as.Date("2019-01-01"), by = "months", length.out = length(heart_ts)),
  Value = as.numeric(heart_ts)
)

# Plot using ggplot
ggplot(heart_disease_df, aes(x = Date, y = Value)) + 
  geom_line(aes(color = "Data")) +
  geom_line(aes(y = zoo::rollapply(Value, 3, mean, fill = NA), color = "3-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 7, mean, fill = NA), color = "7-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 15, mean, fill = NA), color = "15-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 27, mean, fill = NA), color = "27-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 39, mean, fill = NA), color = "39-MA")) +
  xlab("Time") + ylab("Price") +
  ggtitle('Time Series Plot For Heart Disease Deaths with Moving Averages') +
  theme_bw()+
  scale_colour_manual(values=c("Data"="grey",
                               "3-MA"="violet",
                               "7-MA"="pink",
                               "15-MA"="blue",
                               "27-MA"="#5a3196",
                               "39-MA"="lightblue"),
                      breaks=c("Data", "3-MA", "7-MA", "15-MA", "27-MA", "39-MA"))

# Diabetes
diabetes_df <- data.frame(
  Date = seq(as.Date("2019-01-01"), by = "months", length.out = length(diabetes_ts)),
  Value = as.numeric(diabetes_ts)
)

# Plot using ggplot
ggplot(diabetes_df, aes(x = Date, y = Value)) + 
  geom_line(aes(color = "Data")) +
  geom_line(aes(y = zoo::rollapply(Value, 3, mean, fill = NA), color = "3-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 7, mean, fill = NA), color = "7-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 15, mean, fill = NA), color = "15-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 27, mean, fill = NA), color = "27-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 39, mean, fill = NA), color = "39-MA")) +
  xlab("Time") + ylab("Price") +
  ggtitle('Time Series Plot For Diabetes Deaths with Moving Averages') +
  theme_bw()+
  scale_colour_manual(values=c("Data"="grey",
                               "3-MA"="violet",
                               "7-MA"="pink",
                               "15-MA"="blue",
                               "27-MA"="#5a3196",
                               "39-MA"="lightblue"),
                      breaks=c("Data", "3-MA", "7-MA", "15-MA", "27-MA", "39-MA"))


```

## Public Health Outcomes: Infant Mortality Rate

```{r infant_mortality_moving_avg}
#| code-fold: true
#| warning: false

# Infant Mortality Rate
infant_mortality_df <- data.frame(
  Date = seq(as.Date("2019-01-01"), by = "months", length.out = length(infant_mortality_ts)),
  Value = as.numeric(infant_mortality_ts)
)

# Plot using ggplot
ggplot(infant_mortality_df, aes(x = Date, y = Value)) + 
  geom_line(aes(color = "Data")) +
  geom_line(aes(y = zoo::rollapply(Value, 3, mean, fill = NA), color = "3-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 7, mean, fill = NA), color = "7-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 15, mean, fill = NA), color = "15-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 27, mean, fill = NA), color = "27-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 39, mean, fill = NA), color = "39-MA")) +
  xlab("Time") + ylab("Price") +
  ggtitle('Time Series Plot For Infant Mortality Rate with Moving Averages') +
  theme_bw()+
  scale_colour_manual(values=c("Data"="grey",
                               "3-MA"="violet",
                               "7-MA"="pink",
                               "15-MA"="blue",
                               "27-MA"="#5a3196",
                               "39-MA"="lightblue"),
                      breaks=c("Data", "3-MA", "7-MA", "15-MA", "27-MA", "39-MA"))


```

## Healthcare Access and Utilization: Health Insurance Coverage

```{r health_insurance_moving_avg}
#| code-fold: true
#| warning: false

# Health Insurance Coverage
health_insurance_df <- data.frame(
  Date = seq(as.Date("2019-01-01"), by = "months", length.out = length(health_insurance_ts)),
  Value = as.numeric(health_insurance_ts)
)

# Plot using ggplot
ggplot(health_insurance_df, aes(x = Date, y = Value)) + 
  geom_line(aes(color = "Data")) +
  geom_line(aes(y = zoo::rollapply(Value, 3, mean, fill = NA), color = "3-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 7, mean, fill = NA), color = "7-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 15, mean, fill = NA), color = "15-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 27, mean, fill = NA), color = "27-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 39, mean, fill = NA), color = "39-MA")) +
  xlab("Time") + ylab("Price") +
  ggtitle('Time Series Plot For Health Insurance Coverage with Moving Averages') +
  theme_bw()+
  scale_colour_manual(values=c("Data"="grey",
                               "3-MA"="violet",
                               "7-MA"="pink",
                               "15-MA"="blue",
                               "27-MA"="#5a3196",
                               "39-MA"="lightblue"),
                      breaks=c("Data", "3-MA", "7-MA", "15-MA", "27-MA", "39-MA"))
```

## Healthcare Access and Utilization: Emergency Department Visits

```{r emergency_department_moving_avg}
#| code-fold: true
#| warning: false

# Emergency Department Visits
emergency_room_df <- data.frame(
  Date = seq(as.Date("2019-01-01"), by = "months", length.out = length(emergency_room_ts)),
  Value = as.numeric(emergency_room_ts)
)

# Plot using ggplot
ggplot(emergency_room_df, aes(x = Date, y = Value)) + 
  geom_line(aes(color = "Data")) +
  geom_line(aes(y = zoo::rollapply(Value, 3, mean, fill = NA), color = "3-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 7, mean, fill = NA), color = "7-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 15, mean, fill = NA), color = "15-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 27, mean, fill = NA), color = "27-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 39, mean, fill = NA), color = "39-MA")) +
  xlab("Time") + ylab("Price") +
  ggtitle('Time Series Plot For Emergency Department Visits with Moving Averages') +
  theme_bw()+
  scale_colour_manual(values=c("Data"="grey",
                               "3-MA"="violet",
                               "7-MA"="pink",
                               "15-MA"="blue",
                               "27-MA"="#5a3196",
                               "39-MA"="lightblue"),
                      breaks=c("Data", "3-MA", "7-MA", "15-MA", "27-MA", "39-MA"))

```

## Healthcare Costs: Prescription Drug Costs

```{r prescription_drug_moving_avg}
#| code-fold: true
#| warning: false

# Prescription Drug Costs
prescription_drug_df <- data.frame(
  Date = seq(as.Date("2019-01-01"), by = "months", length.out = length(prescription_drug_ts)),
  Value = as.numeric(prescription_drug_ts)
)

# Plot using ggplot
ggplot(prescription_drug_df, aes(x = Date, y = Value)) + 
  geom_line(aes(color = "Data")) +
  geom_line(aes(y = zoo::rollapply(Value, 3, mean, fill = NA), color = "3-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 7, mean, fill = NA), color = "7-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 15, mean, fill = NA), color = "15-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 27, mean, fill = NA), color = "27-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 39, mean, fill = NA), color = "39-MA")) +
  xlab("Time") + ylab("Price") +
  ggtitle('Time Series Plot For Prescription Drug Costs with Moving Averages') +
  theme_bw()+
  scale_colour_manual(values=c("Data"="grey",
                               "3-MA"="violet",
                               "7-MA"="pink",
                               "15-MA"="blue",
                               "27-MA"="#5a3196",
                               "39-MA"="lightblue"),
                      breaks=c("Data", "3-MA", "7-MA", "15-MA", "27-MA", "39-MA"))


```

## Healthcare Costs: GDP Contribution of Healthcare Industry

```{r gdp_healthcare_moving_avg}
#| code-fold: true
#| warning: false

# GDP Contribution of Healthcare Industry
gdp_healthcare_df <- data.frame(
  Date = seq(as.Date("2019-01-01"), by = "months", length.out = length(gdp_healthcare_ts)),
  Value = as.numeric(gdp_healthcare_ts)
)

# Plot using ggplot
ggplot(gdp_healthcare_df, aes(x = Date, y = Value)) + 
  geom_line(aes(color = "Data")) +
  geom_line(aes(y = zoo::rollapply(Value, 3, mean, fill = NA), color = "3-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 7, mean, fill = NA), color = "7-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 15, mean, fill = NA), color = "15-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 27, mean, fill = NA), color = "27-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 39, mean, fill = NA), color = "39-MA")) +
  xlab("Time") + ylab("Price") +
  ggtitle('Time Series Plot For GDP Contribution of Healthcare Industry with Moving Averages') +
  theme_bw()+
  scale_colour_manual(values=c("Data"="grey",
                               "3-MA"="violet",
                               "7-MA"="pink",
                               "15-MA"="blue",
                               "27-MA"="#5a3196",
                               "39-MA"="lightblue"),
                      breaks=c("Data", "3-MA", "7-MA", "15-MA", "27-MA", "39-MA"))


```

## Healthcare Behavior and Risk Factors: Smoking Prevalence

```{r smoking_prevalence_moving_avg}
#| code-fold: true
#| warning: false

# Smoking Prevalence
smoking_prevalence_df <- data.frame(
  Date = seq(as.Date("2019-01-01"), by = "months", length.out = length(adult_smokers_ts)),
  Value = as.numeric(adult_smokers_ts)
)

# Plot using ggplot
ggplot(smoking_prevalence_df, aes(x = Date, y = Value)) + 
  geom_line(aes(color = "Data")) +
  geom_line(aes(y = zoo::rollapply(Value, 3, mean, fill = NA), color = "3-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 7, mean, fill = NA), color = "7-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 15, mean, fill = NA), color = "15-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 27, mean, fill = NA), color = "27-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 39, mean, fill = NA), color = "39-MA")) +
  xlab("Time") + ylab("Price") +
  ggtitle('Time Series Plot For Smoking Prevalence with Moving Averages') +
  theme_bw()+
  scale_colour_manual(values=c("Data"="grey",
                               "3-MA"="violet",
                               "7-MA"="pink",
                               "15-MA"="blue",
                               "27-MA"="#5a3196",
                               "39-MA"="lightblue"),
                      breaks=c("Data", "3-MA", "7-MA", "15-MA", "27-MA", "39-MA"))
```

## Healthcare Behavior and Risk Factors: Alcohol Consumption

```{r alcohol_consumption_moving_avg}
#| code-fold: true
#| warning: false

# Alcohol Consumption
alcohol_consumption_df <- data.frame(
  Date = seq(as.Date("2019-01-01"), by = "months", length.out = length(alcohol_consumption_ts)),
  Value = as.numeric(alcohol_consumption_ts)
)

# Plot using ggplot
ggplot(alcohol_consumption_df, aes(x = Date, y = Value)) + 
  geom_line(aes(color = "Data")) +
  geom_line(aes(y = zoo::rollapply(Value, 3, mean, fill = NA), color = "3-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 7, mean, fill = NA), color = "7-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 15, mean, fill = NA), color = "15-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 27, mean, fill = NA), color = "27-MA")) +
  geom_line(aes(y = zoo::rollapply(Value, 39, mean, fill = NA), color = "39-MA")) +
  xlab("Time") + ylab("Price") +
  ggtitle('Time Series Plot For Alcohol Consumption with Moving Averages') +
  theme_bw()+
  scale_colour_manual(values=c("Data"="grey",
                               "3-MA"="violet",
                               "7-MA"="pink",
                               "15-MA"="blue",
                               "27-MA"="#5a3196",
                               "39-MA"="lightblue"),
                      breaks=c("Data", "3-MA", "7-MA", "15-MA", "27-MA", "39-MA"))

```
:::

In my analysis, I've incorporated five moving average windows to study the data---three short-term moving averages of 3 and 7, two medium-term windows of 15 and 27, and one long-term moving average of 39.

From this approach, the 7-day moving average (7-MA) appears to be the most effective choice across all series for capturing relevant trends while smoothing out noise.

**Financial/Economy: Large-scale Pharmaceutical:** The best choice of the moving average for Large-scale Pharmaceutical stock series seems to be 7-MA.

**Financial/Economy: Biotechnology:** The best choice of the moving average for Biotechnology stock series seems to be 7-MA.

**Financial/Economy: Generic and Specialty Drug:** The best choice of the moving average for Generic and Specialty Drug stock series seems to be 7-MA.

**Financial/Economy: Small and Medium-sized Biotech:** The best choice of the moving average for Small and Medium-sized Biotech stock series seems to be 7-MA.

**Public Health Outcomes: Average Life Expectancy:** The best choice of the moving average for Average Life Expectancy series seems to be 7-MA.

**Public Health Outcomes: Deaths of Major Diseases(Cancer, Heart Disease, Diabetes)** The best choice of the moving average for Deaths of Major Diseases(Cancer, Heart Disease, Diabetes) series seems to be 7-MA.

**Public Health Outcomes: Infant Mortality Rate** The best choice of the moving average for Infant Mortality Rate series seems to be 7-MA.

**Healthcare Access and Utilization: Health Insurance Coverage** The best choice of the moving average for Health Insurance Coverage series seems to be 7-MA.

**Healthcare Access and Utilization: Emergency Room Visits** The best choice of the moving average for Emergency Room Visits series seems to be 7-MA.

**Healthcare Costs: Costs of Prescription Drugs** The best choice of the moving average for Costs of Prescription Drugs series seems to be 7-MA.

**Healthcate Costs: GDP Contribution of Healthcare Industry** The best choice of the moving average for GDP Contribution of Healthcare Industry series seems to be 7-MA.

**Health Behavior and Risk Factors: Smoking Prevelance** The best choice of the moving average for Smoking Prevelance series seems to be 7-MA.

**Health Behavior and Risk Factors: Alcohol Consumpition** The best choice of the moving average for Alcohol Consumpition series seems to be 7-MA.

The 3 moving average (3-MA) doesn't show significant deviation from the original data, indicating it may not smooth the fluctuations effectively. On the other hand, the 15, 27, and 39 moving averages (15-MA, 27-MA, and 39-MA) overly smooth the data in my datasets, to the extent that finer details like seasonality are obscured. This makes it difficult to discern other underlying patterns within the data.
