---
title: "Data Sources"
---

```{r include=FALSE}
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false

library(tidyverse)
library(forecast)
library(astsa) 
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse) # includes ggplot2
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(imputeTS)
library(gridExtra)
library(reticulate)
library(readxl)
library(zoo)
use_python("/usr/local/bin/python3", require = T)
knitr::knit_engines$set(python = reticulate::eng_python)
use_condaenv("base", required = TRUE)
# py_install("tensorflow")
```

## 1 Statista

<img src="images/Statista_Logo.png" alt="Statista Logo" style="width: 30%; height: 60%; display: block; float: left; margin-right: 20px;"/>

Statista is an online platform specializing in data collection and visualization, offering a wide range of statistics, reports, market insights, consumer and company insights. The platform hosts an extensive database of over 1,000,000 statistics on more than 80,000 topics, sourced from over 22,500 providers across 150 countries. Statista's offerings include statistics and survey results presented in charts, infographics, and tables, making it a valuable resource for business customers, educators, and researchers. The data spans various domains, however, we are going to focus solely on Health and Healthcare.

### 1.1 Average Life Expectancy in the US

The data used for the creation of the graph below were obtained from the website Statista.

<a href="https://www.statista.com/statistics/1372668/g7-country-life-expectancy/">Statista-Life Expectancy</a>.

```{r average_life_expectancy}
#| code-fold: true
#| warning: false

# Importing the dataset
average_life_expectancy <- read_xlsx("data/life_expectancy_7countries_2000_2022.xlsx")

# Change it to long format
average_life_expectancy <- average_life_expectancy %>% 
  pivot_longer(cols = -Year, 
               names_to = "Country", 
               values_to = "Life_Expectancy")

average_life_expectancy$Year <- as.Date(paste(average_life_expectancy$Year, "01", "01", sep = "-"), format = "%Y-%m-%d")
average_life_expectancy$Life_Expectancy <- as.double(average_life_expectancy$Life_Expectancy)

# Filter to only include the US
average_life_expectancy <- average_life_expectancy %>% 
  filter(Country == "United States")

head(average_life_expectancy)
```

```{r average_life_expectancy_plot}
#| code-fold: true
#| warning: false

# Plotting the data
average_life_expectancy_plot <- ggplot(average_life_expectancy, 
                                       aes(x = Year, y = Life_Expectancy)) +
  geom_line(color = 'red') +
  geom_point(color = 'red') +
  labs(title = "Average Life Expectancy in the US",
       x = "Year",
       y = "Life Expectancy(years)") +
  theme(
    axis.text = element_text(size = 11),  
    axis.title = element_text(size = 11, face='bold'), 
    title = element_text(size = 12, hjust = 0.5, face='bold'),
    panel.background = element_rect(fill = "white"), 
    panel.grid.minor = element_line(color = "gray", linetype = "dotted"),
    panel.grid.major = element_line(color = "gray", linetype = "dotted")
  )

plotly_life <- ggplotly(average_life_expectancy_plot)
plotly_life


```

### 1.2 Deaths of Major Diseases(Cancer, Heart Disease, Diabetes)

The data used for the creation of the graph below were obtained from the website Statista.

<a href="https://www.statista.com/statistics/184566/deaths-by-cancer-in-the-us-since-1950/">Statista-Cancer Deaths</a>. <a href="https://www.statista.com/statistics/184589/deaths-by-diabetes-mellitus-in-the-us-since-1950/">Statista-Diabetes Deaths</a>. <a href="https://www.statista.com/statistics/184515/deaths-by-heart-diseases-in-the-us-since-1950/">Statista-Heart Disease Deaths</a>.

```{r death_major_diseases}
#| code-fold: true
#| warning: false

# Importing the dataset
death_cancer <- read_xlsx("data/deaths_cancer_us_1950_2019.xlsx")
death_heart <- read_xlsx("data/deaths_heart_diseases_us_1950_2019.xlsx")
death_diabetes <- read_xlsx("data/deaths_diabetes_us_1950_2019.xlsx")

# Merge these three datasets
death_major_diseases <- merge(death_cancer, death_heart, by = "Year")
death_major_diseases <- merge(death_major_diseases, death_diabetes, by = "Year")

# Change Date format
death_major_diseases$Year <- as.Date(paste(death_major_diseases$Year, "01", "01", sep = "-"), format = "%Y-%m-%d")
death_major_diseases$Death_Cancer <- as.double(death_major_diseases$Death_Cancer)
death_major_diseases$Death_Heart_Disease <- as.double(death_major_diseases$Death_Heart_Disease)
death_major_diseases$Death_Diabetes <- as.double(death_major_diseases$Death_Diabetes)

# Change it to long format

death_major_diseases <- death_major_diseases %>% 
  pivot_longer(cols = -Year, 
               names_to = "Disease", 
               values_to = "Deaths")
```

```{r death_major_diseases_plot}
#| code-fold: true
#| warning: false

# Plotting the data
death_major_diseases_plot <- ggplot(death_major_diseases, 
                                       aes(x = Year, y = Deaths, color = Disease)) +
  geom_line() +
  geom_point(color = 'purple') +
  labs(title = "Deaths of Major Diseases in the US",
       x = "Year",
       y = "Number of Deaths(per 100,000)") +
  theme(
    axis.text = element_text(size = 11),  
    axis.title = element_text(size = 11, face='bold'), 
    title = element_text(size = 12, hjust = 0.5, face='bold'),
    panel.background = element_rect(fill = "white"), 
    panel.grid.minor = element_line(color = "gray", linetype = "dotted"),
    panel.grid.major = element_line(color = "gray", linetype = "dotted")
  )

plotly_disease <- ggplotly(death_major_diseases_plot)
plotly_disease
```

### 1.3 Infant Mortality Rates

The data used for the creation of the graph below were obtained from the website Statista.

<a href="https://www.statista.com/statistics/195950/infant-mortality-rate-in-the-united-states-since-1990/">Statista-Infant Mortality Rate</a>.

```{r infant_mortality}
#| code-fold: true
#| warning: false

# Importing the dataset
infant_mortality <- read_xlsx("data/infant_mortality_rate_us_1990_2021.xlsx")

# Change Date format
infant_mortality$Year <- as.Date(paste(infant_mortality$Year, "01", "01", sep = "-"), format = "%Y-%m-%d")
infant_mortality$Infant_Mortality_Rates <- as.double(infant_mortality$Infant_Mortality_Rates)
```

```{r infant_mortality_plot}
#| code-fold: true
#| warning: false

# Plotting the data, area plot
infant_mortality_plot <- ggplot(infant_mortality, 
                                aes(x = Year, y = Infant_Mortality_Rates)) +
  geom_area(fill = "lightblue", alpha = 0.6) +
  labs(title = "Infant Mortality Rates in the US",
       x = "Year",
       y = "Infant Deaths Number(per 1,000 live births)") +
  theme(
    axis.text = element_text(size = 11),  
    axis.title = element_text(size = 11, face='bold'), 
    title = element_text(size = 12, hjust = 0.5, face='bold'),
    panel.background = element_rect(fill = "white"), 
    panel.grid.minor = element_line(color = "gray", linetype = "dotted"),
    panel.grid.major = element_line(color = "gray", linetype = "dotted")
  )

plotly_infant_mortality <- ggplotly(infant_mortality_plot)
plotly_infant_mortality

```

### 1.4 Health Insurance Coverage

The data used for the creation of the graph below were obtained from the website Statista.

<a href="https://www.statista.com/statistics/200971/percentage-of-americans-without-health-insurance-by-age/">Statista-Health Insurance Coverage</a>.

```{r health_insurance}
#| code-fold: true
#| warning: false

# Importing the dataset
health_insurance <- read_xlsx("data/share_of_people_us_without_health_insurance_age_1997_2022.xlsx")

# Change Date format
health_insurance$Year <- as.Date(paste(health_insurance$Year, "01", "01", sep = "-"), format = "%Y-%m-%d")

# Change it to long format
health_insurance <- health_insurance %>% 
  pivot_longer(cols = -Year, 
               names_to = "Age_Group", 
               values_to = "Percentage")
```

```{r health_insurance_plot}
#| code-fold: true
#| warning: false

# Plotting the data， usea bar plot
health_insurance_plot <- ggplot(health_insurance, 
                                aes(x = factor(Year), y = Percentage, fill = Age_Group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Health Insurance Uncoverage in the US",
       x = "Year",
       y = "Percentage of People without Health Insurance(%)") +
  theme(
    axis.text = element_text(size = 11),  
    axis.title = element_text(size = 11, face='bold'), 
    title = element_text(size = 12, hjust = 0.5, face='bold'),
    panel.background = element_rect(fill = "white"), 
    panel.grid.minor = element_line(color = "gray", linetype = "dotted"),
    panel.grid.major = element_line(color = "gray", linetype = "dotted")
  )+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))

plotly_health_insurance <- ggplotly(health_insurance_plot)
plotly_health_insurance
```

### 1.5 Emergency Room Visits

The data used for the creation of the graph below were obtained from the website Statista.

<a href="https://www.statista.com/statistics/184432/us-population-with-emergency-room-visits-by-age/">Statista-Emergency Room Visits</a>.

```{r emergency_room}
#| code-fold: true
#| warning: false

# Importing the dataset
emergency_room <- read_xlsx("data/us_emergency_room_visits_1997_2019_by_age.xlsx")

# Change it to long format
emergency_room <- emergency_room %>% 
  pivot_longer(cols = -Year, 
               names_to = "Age_Group", 
               values_to = "Visits_Percent")

# Change Date format
emergency_room$Year <- as.Date(paste(emergency_room$Year, "01", "01", sep = "-"), format = "%Y-%m-%d")

```

```{r emergency_room_plot}
#| code-fold: true
#| warning: false

# Plotting the data， usea bar plot
emergency_room_plot <- ggplot(emergency_room, 
                              aes(x = factor(Year), y = Visits_Percent, fill = Age_Group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Emergency Room Visits in the US",
       x = "Year",
       y = "Percentage of People Visited Emergency Room(%)") +
  theme(
    axis.text = element_text(size = 11),  
    axis.title = element_text(size = 11, face='bold'), 
    title = element_text(size = 12, hjust = 0.5, face='bold'),
    panel.background = element_rect(fill = "white"), 
    panel.grid.minor = element_line(color = "gray", linetype = "dotted"),
    panel.grid.major = element_line(color = "gray", linetype = "dotted")
  ) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))

plotly_emergency_room <- ggplotly(emergency_room_plot)
plotly_emergency_room
```

### 1.6 Costs of Prescription Drugs

The data used for the creation of the graph below were obtained from the website Statista.

<a href="https://www.statista.com/statistics/184914/prescription-drug-expenditures-in-the-us-since-1960/">Statista-Prescription drug expenditure</a>.

```{r prescription_drug}
#| code-fold: true
#| warning: false

# Importing the dataset
prescription_drug <- read_xlsx("data/prescription_drug_expenditure_us_1960_2022.xlsx")

# Change Date format
prescription_drug$Year <- as.Date(paste(prescription_drug$Year, "01", "01", sep = "-"), format = "%Y-%m-%d")

```

```{r prescription_drug _plot}
#| code-fold: true
#| warning: false

# Plotting the data， use bar plot
prescription_drug_plot <- ggplot(prescription_drug, 
                              aes(x = factor(Year), y = Expenditure)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Prescription Drugs Expenditure in the US",
       x = "Year",
       y = "Expenditure(billion dollars)") +
  theme(
    axis.text = element_text(size = 11),  
    axis.title = element_text(size = 11, face='bold'), 
    title = element_text(size = 12, hjust = 0.5, face='bold'),
    panel.background = element_rect(fill = "white"), 
    panel.grid.minor = element_line(color = "gray", linetype = "dotted"),
    panel.grid.major = element_line(color = "gray", linetype = "dotted")
  ) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))

plotly_prescription_drug<- ggplotly(prescription_drug_plot)
plotly_prescription_drug
```

### 1.7 Costs of Drug Development

The data used for the creation of the graph below were obtained from the website Statista.

<a href="https://www.statista.com/statistics/184432/us-population-with-emergency-room-visits-by-age/">Statista-Drug_development</a>.

```{r drug_development}
#| code-fold: true
#| warning: false

# Importing the dataset
drug_development <- read_xlsx("data/pharmaceuticals_cost_of_drug_development_in_the_us_since_1975.xlsx")

```

```{r drug_development_plot}
#| code-fold: true
#| warning: false

# Plotting the data， usea bar plot
drug_development_plot <- ggplot(drug_development, 
                              aes(x = factor(Year), y = Cost)) +
  geom_bar(stat = "identity", position = "dodge", fill = 'blue') +
  labs(title = "Costs of Drug Development in the US",
       x = "Year",
       y = "Cost(million dollars)") +
  theme(
    axis.text = element_text(size = 11),  
    axis.title = element_text(size = 11, face='bold'), 
    title = element_text(size = 12, hjust = 0.5, face='bold'),
    panel.background = element_rect(fill = "white"), 
    panel.grid.minor = element_line(color = "gray", linetype = "dotted"),
    panel.grid.major = element_line(color = "gray", linetype = "dotted")
  ) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))

plotly_drug_development <- ggplotly(drug_development_plot)
plotly_drug_development
```

### 1.8 Number of Adult Smokers

The data used for the creation of the graph below were obtained from the website Statista.

<a href="https://www.statista.com/statistics/261581/current-adult-smokers-in-the-united-states/">Statista-Adult Smokers</a>.

```{r adult_smokers}
#| code-fold: true
#| warning: false

# Importing the dataset
adult_smokers <- read_xlsx("data/number_of_adult_smokers_us_1965_2021.xlsx")

# Change Date format
adult_smokers$Year <- as.Date(paste(adult_smokers$Year, "01", "01", sep = "-"), format = "%Y-%m-%d")
```

```{r adult_smokers_plot}
#| code-fold: true
#| warning: false

# Plotting the data， use a line plot
adult_smokers_plot <- ggplot(adult_smokers, 
                              aes(x = Year, y = Number)) +
  geom_line(color = 'purple') +
  labs(title = "Number of Adult Smokers in the US",
       x = "Year",
       y = "Number of Smokers(million)") +
  scale_x_date(date_labels = "%Y", date_breaks = "1 years") +
  theme(
    axis.text = element_text(size = 11),  
    axis.title = element_text(size = 11, face='bold'), 
    title = element_text(size = 12, hjust = 0.5, face='bold'),
    panel.background = element_rect(fill = "white"), 
    panel.grid.minor = element_line(color = "gray", linetype = "dotted"),
    panel.grid.major = element_line(color = "gray", linetype = "dotted")
  ) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))

plotly_adult_smokers <- ggplotly(adult_smokers_plot)
plotly_adult_smokers

```

### 1.9 Alcohol Consumption

The data used for the creation of the graph below were obtained from the website Statista. Alcohol consumption per capita from all beverages in the U.S. from 1850 to 2021 (in gallons of ethanol) <a href="https://www.statista.com/statistics/442818/per-capita-alcohol-consumption-of-all-beverages-in-the-us/">Statista-Alcohol Consumption</a>.

```{r alcohol_consumption}
#| code-fold: true
#| warning: false

# Importing the dataset
alcohol_consumption <- read_xlsx("data/per_capita_alcohol_consumption_of_all_beverages_us_1850_2021.xlsx")

# Change Date format
alcohol_consumption$Year <- as.Date(paste(alcohol_consumption$Year, "01", "01", sep = "-"), format = "%Y-%m-%d")
```

```{r alcohol_consumption_plot}
#| code-fold: true
#| warning: false

# Plotting the data， use bar plot
alcohol_consumption_plot <- ggplot(alcohol_consumption, 
                              aes(x = Year, y = Consumption)) +
  geom_bar(stat = "identity", position = "dodge", fill = 'green') +
  labs(title = "Alcohol consumption per capita from all beverages in the US",
       x = "Year",
       y = "Consumption(gallons of ethanol)") +
  scale_x_date(date_labels = "%Y", date_breaks = "5 years") +
  theme(
    axis.text = element_text(size = 11),  
    axis.title = element_text(size = 11, face='bold'), 
    title = element_text(size = 12, hjust = 0.5, face='bold'),
    panel.background = element_rect(fill = "white"), 
    panel.grid.minor = element_line(color = "gray", linetype = "dotted"),
    panel.grid.major = element_line(color = "gray", linetype = "dotted")
  ) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))

plotly_alcohol_consumption <- ggplotly(alcohol_consumption_plot)
plotly_alcohol_consumption

```

## 2 Bureau of Economic Analysis

<img src="images/Bea_Logo.png" alt="Bea Logo" style="width: 30%; height: 60%; display: block; float: left; margin-right: 20px;"/>

The Bureau of Economic Analysis (BEA) is an agency of the United States Department of Commerce that provides important statistical information about the U.S. economy. The BEA's mission is to promote a better understanding of the U.S. economy by providing the most timely, relevant, and accurate economic accounts data in an objective and cost-effective manner. The BEA is responsible for the production of some of the most closely watched economic statistics that influence decisions of government officials, business people, and individuals. These statistics include the gross domestic product (GDP), which is the primary indicator used to gauge the health of the country's economy. Other critical data produced by the BEA include: Personal Income and Outlays, Balance of Payments, Industry Accounts, and Regional Accounts.

### 2.1 GDP Contribution of Healthcare Industry

The data used for the creation of the graph below were obtained from BEA.

<a href="https://apps.bea.gov/iTable/?reqid=150&step=2&isuri=1&categories=gdpxind&_gl=1*ve42ht*_ga*NDQxNjMyNjYuMTcwNjA0ODQ1MQ..*_ga_J4698JNNFT*MTcwNzAwMTc3Ni42LjEuMTcwNzAwMTg2MC40NS4wLjA.#eyJhcHBpZCI6MTUwLCJzdGVwcyI6WzEsMiwzLDNdLCJkYXRhIjpbWyJjYXRlZ29yaWVzIiwiR2RweEluZCJdLFsiVGFibGVfTGlzdCIsIjEiXSxbIlNjYWxlIiwiLTkiXSxbIkZpcnN0X1llYXIiLCIyMDE4Il0sWyJMYXN0X1llYXIiLCIyMDIzIl0sWyJSb3dzIixbIjIyUiJdXSxbIlNlcmllcyIsIlEiXSxbIkNvbHVtbnMiLFsiMjAyMCJdXV19">BEA-GDP-Value Added by Industry</a>.

```{r gdp_healthcare}
#| code-fold: true
#| warning: false

# Importing the dataset
gdp_industry <- read_csv("data/GDP_by_Industry.csv", skip = 4) %>%
  select(-Line)

colnames(gdp_industry) <- c("Industry", "2018-Q1", "2018-Q2", "2018-Q3", "2018-Q4", "2019-Q1", "2019-Q2", "2019-Q3", "2019-Q4", "2020-Q1", "2020-Q2", "2020-Q3", "2020-Q4", "2021-Q1", "2021-Q2", "2021-Q3", "2021-Q4", "2022-Q1", "2022-Q2", "2022-Q3", "2022-Q4", "2023-Q1", "2023-Q2", "2023-Q3")

gdp_industry <- gdp_industry %>%
  filter((Industry == "Agriculture, forestry, fishing, and hunting")|
           (Industry == "Mining")|
           (Industry == "Utilities")|
           (Industry == "Construction")|
           (Industry == "Manufacturing")|
           (Industry == "Wholesale trade")|
           (Industry == "Retail trade")|
           (Industry == "Transportation and warehousing")|
           (Industry == "Information")|
           (Industry == "Finance and insurance")|
           (Industry == "Real estate and rental and leasing")|
           (Industry == "Professional, scientific, and technical services")|
           (Industry == "Management of companies and enterprises")|
           (Industry == "Administrative and waste management services")|
           (Industry == "Educational services")|
           (Industry == "Health care and social assistance")|
           (Industry == "Arts, entertainment, and recreation")|
           (Industry == "Accommodation and food services")|
           (Industry == "Other services, except government")|
           (Industry == "Federal")|
           (Industry == "State and local")
  )

## Change it to long format
gdp_industry <- gdp_industry %>%
  pivot_longer(cols = -Industry, 
               names_to = "Date", 
               values_to = "GDP")

# Change date to Date format
gdp_industry$Date <- as.yearqtr(gdp_industry$Date, format = "%Y-Q%q")

gdp_industry$Date <- as.Date(gdp_industry$Date)
gdp_industry$GDP <- as.double(gdp_industry$GDP)
```

```{r gdp_healthcare_plot}
#| code-fold: true
#| warning: false

# Plotting the data
gdp_plot <- ggplot(gdp_industry, aes(x = Date, y = GDP, color = Industry)) +
  geom_line() +
  labs(title = "GDP Contribution of Different Industries",
       x = "Year",
       y = "GDP (in billions of dollars)") +
  theme(
    axis.text = element_text(size = 11),  
    axis.title = element_text(size = 11, face='bold'), 
    title = element_text(size = 12, hjust = 0.5, face='bold'),
    panel.background = element_rect(fill = "white"), 
    panel.grid.minor = element_line(color = "gray", linetype = "dotted"),
    panel.grid.major = element_line(color = "gray", linetype = "dotted"),
    legend.position = "bottom"
  )

plotly_gdp <- ggplotly(gdp_plot)
plotly_gdp
```

## 3 Yahoo Stocks Data

<img src="images/Yahoo_Logo.png" alt="Yahoo Logo" style="width: 30%; height: 60%; display: block; float: left; margin-right: 20px;"/>

Yahoo! Finance is a Yahoo! network media property that delivers financial news, data, commentary, stock quotes, press releases, financial reports, and original content. It also provides online tools for personal finance management. Alongside showcasing paid partner content, it publishes original stories by its in-house journalists. It holds the 20th spot in SimilarWeb's ranking of major news and media websites. In 2017, Yahoo! Finance introduced cryptocurrency news coverage, featuring information on over 9,000 unique coins, including Bitcoin and Ethereum.Furthermore, Yahoo Finance's video content is accessible via connected TVs and devices like Apple TV, Samsung TV Plus, Roku, and YouTube.

The data used below were obtained from Yahoo Finance.

<a href="https://finance.yahoo.com">Yahoo Finance</a>.

### 3.1 Large-scale comprehensive pharmaceutical companies

```{r yahoo_stocks_large_pharma}
#| code-fold: true
#| warning: false


options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)

tickers = c("PFE", "MRK", "JNJ", "ABT", "TMO", "LLY", "BMY", "GILD", "AMGN", "ABBV", "REGN", "BIIB")

for (i in tickers){
  getSymbols(i,
             from = "2020-01-01",
             to = "2024-02-02")}

x <- list(
  title = "date"
)
y <- list(
  title = "value"
)

stock <- data.frame(PFE$PFE.Adjusted,
                    MRK$MRK.Adjusted,
                    JNJ$JNJ.Adjusted,
                    ABT$ABT.Adjusted,
                    TMO$TMO.Adjusted,
                    LLY$LLY.Adjusted,
                    BMY$BMY.Adjusted,
                    GILD$GILD.Adjusted,
                    AMGN$AMGN.Adjusted,
                    ABBV$ABBV.Adjusted,
                    REGN$REGN.Adjusted,
                    BIIB$BIIB.Adjusted)


stock <- data.frame(stock,rownames(stock))
colnames(stock) <- append(tickers,'Dates')

stock$date<-as.Date(stock$Dates,"%Y-%m-%d")
head(stock)
```

### 3.2 Biotechnology companies

```{r yahoo_stocks_biotech}
#| code-fold: true
#| warning: false

options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)

tickers = c("VRTX", "MRNA", "BNTX", "ILMN", "ALNY", "INCY", "NBIX", "NKTR", "IONS")


for (i in tickers){
  getSymbols(i,
             from = "2020-01-01",
             to = "2024-02-02")}

x <- list(
  title = "date"
)
y <- list(
  title = "value"
)

stock <- data.frame(VRTX$VRTX.Adjusted,
                    MRNA$MRNA.Adjusted,
                    BNTX$BNTX.Adjusted,
                    ILMN$ILMN.Adjusted,
                    ALNY$ALNY.Adjusted,
                    INCY$INCY.Adjusted,
                    NBIX$NBIX.Adjusted,
                    NKTR$NKTR.Adjusted,
                    IONS$IONS.Adjusted)


stock <- data.frame(stock,rownames(stock))
colnames(stock) <- append(tickers,'Dates')

stock$date<-as.Date(stock$Dates,"%Y-%m-%d")
head(stock)
```

### 3.3 Generic and specialty drug companies

```{r yahoo_stocks_generic_specialty}
#| code-fold: true
#| warning: false

options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)

tickers = c("TEVA", "PRGO", "CTLT", "BHC", "JAZZ", "VTRS")


for (i in tickers){
  getSymbols(i,
             from = "2020-01-01",
             to = "2024-02-02")}

x <- list(
  title = "date"
)
y <- list(
  title = "value"
)

stock <- data.frame(TEVA$TEVA.Adjusted,
                    PRGO$PRGO.Adjusted,
                    CTLT$CTLT.Adjusted,
                    BHC$BHC.Adjusted,
                    JAZZ$JAZZ.Adjusted,
                    VTRS$VTRS.Adjusted)


stock <- data.frame(stock,rownames(stock))
colnames(stock) <- append(tickers,'Dates')

stock$date<-as.Date(stock$Dates,"%Y-%m-%d")
head(stock)
```

### 3.4 Small and medium-sized biotech companies

```{r yahoo_stocks_small_medium_biotech}
#| code-fold: true
#| warning: false

options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)

tickers = c("SAGE","EXEL", "UTHR", "ACAD", "LGND", "FOLD")

for (i in tickers){
  getSymbols(i,
             from = "2020-01-01",
             to = "2024-02-02")}

x <- list(
  title = "date"
)
y <- list(
  title = "value"
)

stock <- data.frame(
                    SAGE$SAGE.Adjusted,
                    EXEL$EXEL.Adjusted,
                    UTHR$UTHR.Adjusted,
                    ACAD$ACAD.Adjusted,
                    LGND$LGND.Adjusted,
                    FOLD$FOLD.Adjusted)


stock <- data.frame(stock,rownames(stock))
colnames(stock) <- append(tickers,'Dates')

stock$date<-as.Date(stock$Dates,"%Y-%m-%d")
head(stock)
```

## 4 World Health Organization: Coronavirus (COVID-19)

### 4.1 COVID-19 Cases and Deaths in the US

<img src="images/WHO_Logo.png" alt="WHO Logo" style="width: 30%; height: 60%; display: block; float: left; margin-right: 20px;"/>

The WHO coronavirus (COVID-19) dashboard presents official daily counts of COVID-19 cases, deaths and vaccine utilisation reported by countries, territories and areas. Through the dashboard, they aim to provide a frequently updated data visualization, data dissemination and data exploration resource, while linking users to other useful and informative resources.\n

The data used for the creation of the map below were obtained from WHO.

<a href="https://data.who.int/dashboards/covid19/data?n=c">WHO-Covid-19</a>.

::: {#viz1707018366138 .tableauPlaceholder style="position: relative"}
<noscript><a href='#'> <img src="https://public.tableau.com/static/images/DQ/DQ5B49229/1_rss.png" alt=" " style="border: none"/> </a></noscript>

<object class="tableauViz" style="display:none;">

<param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' /> <param name='embed_code_version' value='3' /> <param name='path' value='shared&#47;DQ5B49229' /> <param name='toolbar' value='yes' /> <param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;DQ&#47;DQ5B49229&#47;1.png' /> <param name='animate_transition' value='yes' /> <param name='display_static_image' value='yes' /> <param name='display_spinner' value='yes' /> <param name='display_overlay' value='yes' /> <param name='display_count' value='yes' /> <param name='language' value='zh-CN' />

</object>
:::

```{=html}
<script type='text/javascript'>
var divElement = document.getElementById('viz1707018366138');
var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    
var scriptElement = document.createElement('script');                    scriptElement.src = 'https://public.tableau.com/javascripts/api/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                </script>
```
